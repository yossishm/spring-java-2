# Multi-stage build for offline/distroless deployment with health checks
# This version provides the cleanest security while supporting health endpoints

# Stage 1: Builder with full JDK
FROM eclipse-temurin:21.0.8_9-jdk-alpine-3.22 AS builder
WORKDIR /build
COPY target/gs-spring-boot-docker-0.2.0.jar /build/app.jar

# Stage 2: Final runtime with minimal tools for health checks
FROM eclipse-temurin:21.0.8_9-jre-alpine-3.22 AS final

# Remove package manager and cache to make it distroless-like
# Keep only essential binaries including wget for health checks
RUN rm -rf /var/cache/apk/* /etc/apk /usr/share/man /usr/share/doc /tmp/* && \
    # Remove unnecessary binaries but keep essential ones for health checks
    find /bin /sbin /usr/bin /usr/sbin -type f ! -name "java" ! -name "sh" ! -name "wget" ! -name "cat" ! -name "ls" ! -name "mkdir" ! -name "rm" ! -name "cp" ! -name "mv" ! -name "chown" ! -name "chmod" ! -name "ln" ! -name "id" ! -name "whoami" ! -name "ps" ! -name "kill" ! -name "sleep" ! -name "echo" ! -name "printf" ! -name "test" ! -name "[" ! -name "addgroup" ! -name "adduser" -delete 2>/dev/null || true && \
    # Create non-root user
    addgroup -g 65532 -S nonroot && \
    adduser -u 65532 -S nonroot -G nonroot

# Set working directory
WORKDIR /app

# Copy the JAR from builder stage
COPY --from=builder /build/app.jar /app/app.jar

# Set ownership to non-root user
RUN chown -R nonroot:nonroot /app

# Switch to non-root user
USER nonroot:nonroot

# Expose port
EXPOSE 8080

# Health check using wget (available in Alpine)
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/actuator/health || exit 1

# Run application
ENTRYPOINT ["java", "-jar", "/app/app.jar"]
