To Do list – creation of a working Dev Environment – modernization

Purpose: creation of a minimal dev environment for microservices on AES-EKS.
Relevant Dev teams: Pattern & Claims Becs.
Status: dome of these requirements exists or are in the process of being created.


1.	Development will continue to be done locally. No integration of any sort. (as is done today). We need to move the .net developers to use .net 9
2.	A Dev environment on EKS- will enable developers to do integration tests with other services for the first time. (continuous integration). 
a.	Dev DNS – a new network definition that will include the complete Dev environment tools and connectivity. We need the developers to be able to reach this env. with “Postman” so they can check the microservice running on EKS.
b.	CICD pipeline – for containerization of services developed locally. And push to Git. 
c.	Base image – for new services using .NET 9. All microservices will be built using this image. Maybe pattern has one for Java already
d.	Devsecops - included as part of the CICD, but not a Must to begin with. Can be defined in parallel to the environment setup for the first Microservice.
e.	ArgoCD – maintain a connection between the Git and EKS. Continuous deployment. Can be used for minimal logs as well. Developers need access to ArgoCD as well.
f.	HelmChart to be connected to ArgoCD. To be built by devops.
g.	Service mesh – will be needed as soon as we have a few services on EKS. Can be deployed and configured after the first service is deployed on Cloud-dev.
h.	In EKS we should use gateway API for managing ingress traffic.
i.	ELK – or any other stack.
j.	For Egress – we need to complete the design of the first Claims MS, or take Pattern’s microservices, and define exactly the egress requirements they have. As an example, we already know “customer-claim” needs egress to Ensure. If Ensure is deployed “on-prem”, we need to enable connectivity from the EKS to it…. We can create mock services on EKS until all Egress is configured and available for the Development. 
