# Multi-stage build with offline connectivity - no apk add required
# Based on alpine-distroless-specific but copying Java from builder stage

# Stage 1: Builder with full JDK
FROM eclipse-temurin:21.0.8_9-jdk-alpine-3.22 AS builder
WORKDIR /build
COPY target/gs-spring-boot-docker-0.2.0.jar /build/app.jar


# Stage 2: Minimal Alpine runtime (no connectivity needed)
FROM alpine:3.22.1 AS final

# Copy Java runtime from builder stage (no apk add required)
COPY --from=builder /opt/java/openjdk /opt/java/openjdk

# Use existing nobody user instead of creating new user

# Use full path to java instead of creating symlink

# Set working directory
WORKDIR /app

# Copy the JAR from builder stage
COPY --from=builder /build/app.jar /app/app.jar

# Skip ownership change to avoid sd-bus calls

# Switch to nobody user
USER nobody:nobody

# Port 8080 will be exposed by Kubernetes Service

# Run application using full path to java
ENTRYPOINT ["/opt/java/openjdk/bin/java", "-jar", "/app/app.jar"]