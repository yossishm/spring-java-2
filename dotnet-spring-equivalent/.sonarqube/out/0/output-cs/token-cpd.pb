—P
V/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Services/LocalRestClient.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Services '
;' (
public 
class 
LocalRestClient 
: 
IDisposable *
{ 
private 
readonly 

HttpClient 

httpClient  *
;* +
private 
readonly 
string 
server "
=# $
$str% <
;< =
public 

LocalRestClient 
( 
string !
authorization" /
=0 1
$str2 4
)4 5
{ 	
this 
. 

httpClient 
= 
new !

HttpClient" ,
(, -
)- .
;. /
this 
. 

httpClient 
. !
DefaultRequestHeaders 1
.1 2
Add2 5
(5 6
$str6 >
,> ?
$str@ E
)E F
;F G
var 
	jwsHeader 
= 
Convert #
.# $
ToBase64String$ 2
(2 3
Encoding3 ;
.; <
UTF8< @
.@ A
GetBytesA I
(I J
$strJ a
)a b
)b c
;c d
this 
. 

httpClient 
. !
DefaultRequestHeaders 1
.1 2
Add2 5
(5 6
	jwsHeader6 ?
,? @
authorizationA N
)N O
;O P
} 	
public 

async 
Task 
< 
string 
> 
GetAsync &
(& '
Uri' *
uri+ .
). /
{   !
ArgumentNullException!! 
.!! 
ThrowIfNull!! )
(!!) *
uri!!* -
)!!- .
;!!. /
try## 
{$$ 	
var%% 
response%% 
=%% 
await%%  
this%%! %
.%%% &

httpClient%%& 0
.%%0 1
GetAsync%%1 9
(%%9 :
new%%: =
Uri%%> A
(%%A B
this%%B F
.%%F G
server%%G M
+%%N O
uri%%P S
.%%S T
ToString%%T \
(%%\ ]
)%%] ^
)%%^ _
)%%_ `
.%%` a
ConfigureAwait%%a o
(%%o p
false%%p u
)%%u v
;%%v w
var&& 
content&& 
=&& 
await&& 
response&&  (
.&&( )
Content&&) 0
.&&0 1
ReadAsStringAsync&&1 B
(&&B C
)&&C D
.&&D E
ConfigureAwait&&E S
(&&S T
false&&T Y
)&&Y Z
;&&Z [
return'' 
content'' 
;'' 
}(( 	
catch)) 
()) 
	Exception)) 
ex)) 
))) 
{** 	
throw++ 
new++  
HttpRequestException++ *
(++* +
$"+++ -
$str++- A
{++A B
ex++B D
.++D E
Message++E L
}++L M
"++M N
,++N O
ex++P R
)++R S
;++S T
},, 	
}-- 
public22 

async22 
Task22 
<22 
string22 
>22 
	PostAsync22 '
(22' (
Uri22( +
uri22, /
,22/ 0
string221 7
json228 <
)22< =
{33 !
ArgumentNullException44 
.44 
ThrowIfNull44 )
(44) *
uri44* -
)44- .
;44. /!
ArgumentNullException55 
.55 
ThrowIfNull55 )
(55) *
json55* .
)55. /
;55/ 0
try77 
{88 	
using99 
var99 
content99 
=99 
new99  #
StringContent99$ 1
(991 2
json992 6
,996 7
Encoding998 @
.99@ A
UTF899A E
,99E F
$str99G Y
)99Y Z
;99Z [
var:: 
response:: 
=:: 
await::  
this::! %
.::% &

httpClient::& 0
.::0 1
	PostAsync::1 :
(::: ;
new::; >
Uri::? B
(::B C
this::C G
.::G H
server::H N
+::O P
uri::Q T
.::T U
ToString::U ]
(::] ^
)::^ _
)::_ `
,::` a
content::b i
)::i j
.::j k
ConfigureAwait::k y
(::y z
false::z 
)	:: Ä
;
::Ä Å
var;; 
responseContent;; 
=;;  !
await;;" '
response;;( 0
.;;0 1
Content;;1 8
.;;8 9
ReadAsStringAsync;;9 J
(;;J K
);;K L
.;;L M
ConfigureAwait;;M [
(;;[ \
false;;\ a
);;a b
;;;b c
return<< 
responseContent<< "
;<<" #
}== 	
catch>> 
(>> 
	Exception>> 
ex>> 
)>> 
{?? 	
throw@@ 
new@@  
HttpRequestException@@ *
(@@* +
$"@@+ -
$str@@- B
{@@B C
ex@@C E
.@@E F
Message@@F M
}@@M N
"@@N O
,@@O P
ex@@Q S
)@@S T
;@@T U
}AA 	
}BB 
publicGG 

asyncGG 
TaskGG 
<GG 
stringGG 
>GG 
PutAsyncGG &
(GG& '
UriGG' *
uriGG+ .
,GG. /
stringGG0 6
jsonGG7 ;
)GG; <
{HH !
ArgumentNullExceptionII 
.II 
ThrowIfNullII )
(II) *
uriII* -
)II- .
;II. /!
ArgumentNullExceptionJJ 
.JJ 
ThrowIfNullJJ )
(JJ) *
jsonJJ* .
)JJ. /
;JJ/ 0
tryLL 
{MM 	
usingNN 
varNN 
contentNN 
=NN 
newNN  #
StringContentNN$ 1
(NN1 2
jsonNN2 6
,NN6 7
EncodingNN8 @
.NN@ A
UTF8NNA E
,NNE F
$strNNG Y
)NNY Z
;NNZ [
varOO 
responseOO 
=OO 
awaitOO  
thisOO! %
.OO% &

httpClientOO& 0
.OO0 1
PutAsyncOO1 9
(OO9 :
newOO: =
UriOO> A
(OOA B
thisOOB F
.OOF G
serverOOG M
+OON O
uriOOP S
.OOS T
ToStringOOT \
(OO\ ]
)OO] ^
)OO^ _
,OO_ `
contentOOa h
)OOh i
.OOi j
ConfigureAwaitOOj x
(OOx y
falseOOy ~
)OO~ 
;	OO Ä
varPP 
responseContentPP 
=PP  !
awaitPP" '
responsePP( 0
.PP0 1
ContentPP1 8
.PP8 9
ReadAsStringAsyncPP9 J
(PPJ K
)PPK L
.PPL M
ConfigureAwaitPPM [
(PP[ \
falsePP\ a
)PPa b
;PPb c
returnQQ 
responseContentQQ "
;QQ" #
}RR 	
catchSS 
(SS 
	ExceptionSS 
exSS 
)SS 
{TT 	
throwUU 
newUU  
HttpRequestExceptionUU *
(UU* +
$"UU+ -
$strUU- A
{UUA B
exUUB D
.UUD E
MessageUUE L
}UUL M
"UUM N
,UUN O
exUUP R
)UUR S
;UUS T
}VV 	
}WW 
public\\ 

async\\ 
Task\\ 
<\\ 
string\\ 
>\\ 
DeleteAsync\\ )
(\\) *
Uri\\* -
uri\\. 1
)\\1 2
{]] !
ArgumentNullException^^ 
.^^ 
ThrowIfNull^^ )
(^^) *
uri^^* -
)^^- .
;^^. /
try`` 
{aa 	
varbb 
responsebb 
=bb 
awaitbb  
thisbb! %
.bb% &

httpClientbb& 0
.bb0 1
DeleteAsyncbb1 <
(bb< =
newbb= @
UribbA D
(bbD E
thisbbE I
.bbI J
serverbbJ P
+bbQ R
uribbS V
.bbV W
ToStringbbW _
(bb_ `
)bb` a
)bba b
)bbb c
.bbc d
ConfigureAwaitbbd r
(bbr s
falsebbs x
)bbx y
;bby z
varcc 
contentcc 
=cc 
awaitcc 
responsecc  (
.cc( )
Contentcc) 0
.cc0 1
ReadAsStringAsynccc1 B
(ccB C
)ccC D
.ccD E
ConfigureAwaitccE S
(ccS T
falseccT Y
)ccY Z
;ccZ [
returndd 
contentdd 
;dd 
}ee 	
catchff 
(ff 
	Exceptionff 
exff 
)ff 
{gg 	
throwhh 
newhh  
HttpRequestExceptionhh *
(hh* +
$"hh+ -
$strhh- D
{hhD E
exhhE G
.hhG H
MessagehhH O
}hhO P
"hhP Q
,hhQ R
exhhS U
)hhU V
;hhV W
}ii 	
}jj 
publicll 

voidll 
Disposell 
(ll 
)ll 
{mm 
thisnn 
.nn 
Disposenn 
(nn 
truenn 
)nn 
;nn 
GCoo 

.oo
 
SuppressFinalizeoo 
(oo 
thisoo  
)oo  !
;oo! "
}pp 
	protectedrr 
virtualrr 
voidrr 
Disposerr "
(rr" #
boolrr# '
	disposingrr( 1
)rr1 2
{ss 
iftt 

(tt 
	disposingtt 
)tt 
{uu 	
thisvv 
.vv 

httpClientvv 
?vv 
.vv 
Disposevv $
(vv$ %
)vv% &
;vv& '
}ww 	
}xx 
}yy ™t
Q/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Services/JwtService.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Services '
;' (
public 
class 

JwtService 
{ 
private 
readonly 
string 
	secretKey %
;% &
private 
readonly 
int 
expirationHours (
;( )
public 


JwtService 
( 
IConfiguration $
configuration% 2
)2 3
{ 
this 
. 
	secretKey 
= 
configuration &
[& '
$str' 3
]3 4
??5 7
throw8 =
new> A%
InvalidOperationExceptionB [
([ \
$str\ {
){ |
;| }
this 
. 
expirationHours 
= 
int "
." #
Parse# (
(( )
configuration) 6
[6 7
$str7 L
]L M
??N P
$strQ U
,U V
SystemW ]
.] ^
Globalization^ k
.k l
CultureInfol w
.w x
InvariantCulture	x à
)
à â
;
â ä
} 
public 

static 
string 
? 
ExtractUsername )
() *
string* 0
token1 6
)6 7
{   
try!! 
{"" 	
var## 
tokenHandler## 
=## 
new## "#
JwtSecurityTokenHandler### :
(##: ;
)##; <
;##< =
var$$ 
	jsonToken$$ 
=$$ 
tokenHandler$$ (
.$$( )
ReadJwtToken$$) 5
($$5 6
token$$6 ;
)$$; <
;$$< =
return%% 
	jsonToken%% 
.%% 
Claims%% #
.%%# $
FirstOrDefault%%$ 2
(%%2 3
x%%3 4
=>%%5 7
x%%8 9
.%%9 :
Type%%: >
==%%? A
$str%%B L
)%%L M
?%%M N
.%%N O
Value%%O T
??%%U W
null%%X \
;%%\ ]
}&& 	
catch'' 
{(( 	
return)) 
null)) 
;)) 
}** 	
}++ 
public00 

static00 
IReadOnlyList00 
<00  
string00  &
>00& '
ExtractRoles00( 4
(004 5
string005 ;
token00< A
)00A B
{11 
try22 
{33 	
var44 
tokenHandler44 
=44 
new44 "#
JwtSecurityTokenHandler44# :
(44: ;
)44; <
;44< =
var55 
	jsonToken55 
=55 
tokenHandler55 (
.55( )
ReadJwtToken55) 5
(555 6
token556 ;
)55; <
;55< =
return66 
	jsonToken66 
.66 
Claims66 #
.77 
Where77 
(77 
x77 
=>77 
x77 
.77 
Type77 "
==77# %
$str77& ,
)77, -
.88 
Select88 
(88 
x88 
=>88 
x88 
.88 
Value88 $
)88$ %
.99 
ToList99 
(99 
)99 
;99 
}:: 	
catch;; 
{<< 	
return== 
new== 
List== 
<== 
string== "
>==" #
(==# $
)==$ %
;==% &
}>> 	
}?? 
publicDD 

staticDD 
IReadOnlyListDD 
<DD  
stringDD  &
>DD& '
ExtractPermissionsDD( :
(DD: ;
stringDD; A
tokenDDB G
)DDG H
{EE 
tryFF 
{GG 	
varHH 
tokenHandlerHH 
=HH 
newHH "#
JwtSecurityTokenHandlerHH# :
(HH: ;
)HH; <
;HH< =
varII 
	jsonTokenII 
=II 
tokenHandlerII (
.II( )
ReadJwtTokenII) 5
(II5 6
tokenII6 ;
)II; <
;II< =
returnJJ 
	jsonTokenJJ 
.JJ 
ClaimsJJ #
.KK 
WhereKK 
(KK 
xKK 
=>KK 
xKK 
.KK 
TypeKK "
==KK# %
$strKK& 2
)KK2 3
.LL 
SelectLL 
(LL 
xLL 
=>LL 
xLL 
.LL 
ValueLL $
)LL$ %
.MM 
ToListMM 
(MM 
)MM 
;MM 
}NN 	
catchOO 
{PP 	
returnQQ 
newQQ 
ListQQ 
<QQ 
stringQQ "
>QQ" #
(QQ# $
)QQ$ %
;QQ% &
}RR 	
}SS 
publicXX 

staticXX 
stringXX 
ExtractAuthLevelXX )
(XX) *
stringXX* 0
tokenXX1 6
)XX6 7
{YY 
tryZZ 
{[[ 	
var\\ 
tokenHandler\\ 
=\\ 
new\\ "#
JwtSecurityTokenHandler\\# :
(\\: ;
)\\; <
;\\< =
var]] 
	jsonToken]] 
=]] 
tokenHandler]] (
.]]( )
ReadJwtToken]]) 5
(]]5 6
token]]6 ;
)]]; <
;]]< =
return^^ 
	jsonToken^^ 
.^^ 
Claims^^ #
.^^# $
FirstOrDefault^^$ 2
(^^2 3
x^^3 4
=>^^5 7
x^^8 9
.^^9 :
Type^^: >
==^^? A
$str^^B N
)^^N O
?^^O P
.^^P Q
Value^^Q V
??^^W Y
string^^Z `
.^^` a
Empty^^a f
;^^f g
}__ 	
catch`` 
{aa 	
returnbb 
stringbb 
.bb 
Emptybb 
;bb  
}cc 	
}dd 
publicii 

staticii 
stringii #
ExtractIdentityProviderii 0
(ii0 1
stringii1 7
tokenii8 =
)ii= >
{jj 
trykk 
{ll 	
varmm 
tokenHandlermm 
=mm 
newmm "#
JwtSecurityTokenHandlermm# :
(mm: ;
)mm; <
;mm< =
varnn 
	jsonTokennn 
=nn 
tokenHandlernn (
.nn( )
ReadJwtTokennn) 5
(nn5 6
tokennn6 ;
)nn; <
;nn< =
returnoo 
	jsonTokenoo 
.oo 
Claimsoo #
.oo# $
FirstOrDefaultoo$ 2
(oo2 3
xoo3 4
=>oo5 7
xoo8 9
.oo9 :
Typeoo: >
==oo? A
$strooB U
)ooU V
?ooV W
.ooW X
ValueooX ]
??oo^ `
stringooa g
.oog h
Emptyooh m
;oom n
}pp 	
catchqq 
{rr 	
returnss 
stringss 
.ss 
Emptyss 
;ss  
}tt 	
}uu 
publiczz 

staticzz 

Dictionaryzz 
<zz 
stringzz #
,zz# $
stringzz% +
>zz+ ,
ExtractAllClaimszz- =
(zz= >
stringzz> D
tokenzzE J
)zzJ K
{{{ 
try|| 
{}} 	
var~~ 
tokenHandler~~ 
=~~ 
new~~ "#
JwtSecurityTokenHandler~~# :
(~~: ;
)~~; <
;~~< =
var 
	jsonToken 
= 
tokenHandler (
.( )
ReadJwtToken) 5
(5 6
token6 ;
); <
;< =
return
ÄÄ 
	jsonToken
ÄÄ 
.
ÄÄ 
Claims
ÄÄ #
.
ÄÄ# $
ToDictionary
ÄÄ$ 0
(
ÄÄ0 1
x
ÄÄ1 2
=>
ÄÄ3 5
x
ÄÄ6 7
.
ÄÄ7 8
Type
ÄÄ8 <
,
ÄÄ< =
x
ÄÄ> ?
=>
ÄÄ@ B
x
ÄÄC D
.
ÄÄD E
Value
ÄÄE J
)
ÄÄJ K
;
ÄÄK L
}
ÅÅ 	
catch
ÇÇ 
{
ÉÉ 	
return
ÑÑ 
new
ÑÑ 

Dictionary
ÑÑ !
<
ÑÑ! "
string
ÑÑ" (
,
ÑÑ( )
string
ÑÑ* 0
>
ÑÑ0 1
(
ÑÑ1 2
)
ÑÑ2 3
;
ÑÑ3 4
}
ÖÖ 	
}
ÜÜ 
public
ãã 

string
ãã 
GenerateToken
ãã 
(
ãã  
string
ãã  &
username
ãã' /
,
ãã/ 0
IReadOnlyList
ãã1 >
<
ãã> ?
string
ãã? E
>
ããE F
roles
ããG L
,
ããL M
IReadOnlyList
ããN [
<
ãã[ \
string
ãã\ b
>
ããb c
permissions
ããd o
,
ãão p
string
åå 
	authLevel
åå 
=
åå 
$str
åå !
,
åå! "
string
åå# )
idp
åå* -
=
åå. /
$str
åå0 7
)
åå7 8
{
çç #
ArgumentNullException
éé 
.
éé 
ThrowIfNull
éé )
(
éé) *
username
éé* 2
)
éé2 3
;
éé3 4#
ArgumentNullException
èè 
.
èè 
ThrowIfNull
èè )
(
èè) *
roles
èè* /
)
èè/ 0
;
èè0 1#
ArgumentNullException
êê 
.
êê 
ThrowIfNull
êê )
(
êê) *
permissions
êê* 5
)
êê5 6
;
êê6 7
var
íí 
tokenHandler
íí 
=
íí 
new
íí %
JwtSecurityTokenHandler
íí 6
(
íí6 7
)
íí7 8
;
íí8 9
var
ìì 
key
ìì 
=
ìì 
Encoding
ìì 
.
ìì 
ASCII
ìì  
.
ìì  !
GetBytes
ìì! )
(
ìì) *
this
ìì* .
.
ìì. /
	secretKey
ìì/ 8
)
ìì8 9
;
ìì9 :
var
ïï 
claims
ïï 
=
ïï 
new
ïï 
List
ïï 
<
ïï 
Claim
ïï #
>
ïï# $
{
ññ 	
new
óó 
(
óó 

ClaimTypes
óó 
.
óó 
Name
óó 
,
óó  
username
óó! )
)
óó) *
,
óó* +
new
òò 
(
òò 
$str
òò 
,
òò 
username
òò $
)
òò$ %
,
òò% &
new
ôô 
(
ôô 
$str
ôô 
,
ôô 
	authLevel
ôô '
)
ôô' (
,
ôô( )
new
öö 
(
öö 
$str
öö #
,
öö# $
idp
öö% (
)
öö( )
,
öö) *
}
õõ 	
;
õõ	 

foreach
ûû 
(
ûû 
var
ûû 
role
ûû 
in
ûû 
roles
ûû "
)
ûû" #
{
üü 	
claims
†† 
.
†† 
Add
†† 
(
†† 
new
†† 
Claim
††  
(
††  !

ClaimTypes
††! +
.
††+ ,
Role
††, 0
,
††0 1
role
††2 6
)
††6 7
)
††7 8
;
††8 9
}
°° 	
foreach
§§ 
(
§§ 
var
§§ 

permission
§§ 
in
§§  "
permissions
§§# .
)
§§. /
{
•• 	
claims
¶¶ 
.
¶¶ 
Add
¶¶ 
(
¶¶ 
new
¶¶ 
Claim
¶¶  
(
¶¶  !
$str
¶¶! -
,
¶¶- .

permission
¶¶/ 9
)
¶¶9 :
)
¶¶: ;
;
¶¶; <
}
ßß 	
var
©© 
tokenDescriptor
©© 
=
©© 
new
©© !%
SecurityTokenDescriptor
©©" 9
{
™™ 	
Subject
´´ 
=
´´ 
new
´´ 
ClaimsIdentity
´´ (
(
´´( )
claims
´´) /
)
´´/ 0
,
´´0 1
Expires
¨¨ 
=
¨¨ 
DateTime
¨¨ 
.
¨¨ 
UtcNow
¨¨ %
.
¨¨% &
AddHours
¨¨& .
(
¨¨. /
this
¨¨/ 3
.
¨¨3 4
expirationHours
¨¨4 C
)
¨¨C D
,
¨¨D E 
SigningCredentials
≠≠ 
=
≠≠  
new
≠≠! $ 
SigningCredentials
≠≠% 7
(
≠≠7 8
new
≠≠8 ;"
SymmetricSecurityKey
≠≠< P
(
≠≠P Q
key
≠≠Q T
)
≠≠T U
,
≠≠U V 
SecurityAlgorithms
≠≠W i
.
≠≠i j!
HmacSha256Signature
≠≠j }
)
≠≠} ~
,
≠≠~ 
}
ÆÆ 	
;
ÆÆ	 

var
∞∞ 
token
∞∞ 
=
∞∞ 
tokenHandler
∞∞  
.
∞∞  !
CreateToken
∞∞! ,
(
∞∞, -
tokenDescriptor
∞∞- <
)
∞∞< =
;
∞∞= >
return
±± 
tokenHandler
±± 
.
±± 

WriteToken
±± &
(
±±& '
token
±±' ,
)
±±, -
;
±±- .
}
≤≤ 
public
∑∑ 

bool
∑∑ 
ValidateToken
∑∑ 
(
∑∑ 
string
∑∑ $
token
∑∑% *
)
∑∑* +
{
∏∏ 
try
ππ 
{
∫∫ 	
var
ªª 
tokenHandler
ªª 
=
ªª 
new
ªª "%
JwtSecurityTokenHandler
ªª# :
(
ªª: ;
)
ªª; <
;
ªª< =
var
ºº 
key
ºº 
=
ºº 
Encoding
ºº 
.
ºº 
ASCII
ºº $
.
ºº$ %
GetBytes
ºº% -
(
ºº- .
this
ºº. 2
.
ºº2 3
	secretKey
ºº3 <
)
ºº< =
;
ºº= >
tokenHandler
ææ 
.
ææ 
ValidateToken
ææ &
(
ææ& '
token
ææ' ,
,
ææ, -
new
ææ. 1'
TokenValidationParameters
ææ2 K
{
øø &
ValidateIssuerSigningKey
¿¿ (
=
¿¿) *
true
¿¿+ /
,
¿¿/ 0
IssuerSigningKey
¡¡  
=
¡¡! "
new
¡¡# &"
SymmetricSecurityKey
¡¡' ;
(
¡¡; <
key
¡¡< ?
)
¡¡? @
,
¡¡@ A
ValidateIssuer
¬¬ 
=
¬¬  
false
¬¬! &
,
¬¬& '
ValidateAudience
√√  
=
√√! "
false
√√# (
,
√√( )
	ClockSkew
ƒƒ 
=
ƒƒ 
TimeSpan
ƒƒ $
.
ƒƒ$ %
Zero
ƒƒ% )
,
ƒƒ) *
}
≈≈ 
,
≈≈ 
out
≈≈ 
_
≈≈ 
)
≈≈ 
;
≈≈ 
return
«« 
true
«« 
;
«« 
}
»» 	
catch
…… 
{
   	
return
ÀÀ 
false
ÀÀ 
;
ÀÀ 
}
ÃÃ 	
}
ÕÕ 
}ŒŒ óu
E/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Program.cs
var 
builder 
= 
WebApplication 
. 
CreateBuilder *
(* +
args+ /
)/ 0
;0 1
builder 
. 
Logging 
. 
ClearProviders 
( 
)  
;  !
builder 
. 
Logging 
. 

AddConsole 
( 
) 
; 
builder 
. 
Logging 
. 
SetMinimumLevel 
(  
LogLevel  (
.( )
Information) 4
)4 5
;5 6
builder 
. 
Services 
. 
AddControllers 
(  
)  !
;! "
builder 
. 
Services 
. #
AddEndpointsApiExplorer (
(( )
)) *
;* +
builder   
.   
Services   
.   
AddSwaggerGen   
(   
c    
=>  ! #
{!! 
c"" 
."" 

SwaggerDoc"" 
("" 
$str"" 
,"" 
new"" 
	Microsoft"" $
.""$ %
OpenApi""% ,
."", -
Models""- 3
.""3 4
OpenApiInfo""4 ?
{## 
Title$$ 
=$$ 
$str$$ 5
,$$5 6
Version%% 
=%% 
$str%% 
,%% 
Description&& 
=&& 
$str&K 
,KK 
}LL 
)LL 
;LL 
}MM 
)MM 
;MM 
builderPP 
.PP 
ServicesPP 
.PP 
AddAuthenticationPP "
(PP" #
JwtBearerDefaultsPP# 4
.PP4 5 
AuthenticationSchemePP5 I
)PPI J
.QQ 
AddJwtBearerQQ 
(QQ 
optionsQQ 
=>QQ 
{RR 
optionsSS 
.SS %
TokenValidationParametersSS )
=SS* +
newSS, /%
TokenValidationParametersSS0 I
{TT 	$
ValidateIssuerSigningKeyUU $
=UU% &
trueUU' +
,UU+ ,
IssuerSigningKeyVV 
=VV 
newVV " 
SymmetricSecurityKeyVV# 7
(VV7 8
EncodingVV8 @
.VV@ A
ASCIIVVA F
.VVF G
GetBytesVVG O
(VVO P
builderWW 
.WW 
ConfigurationWW %
[WW% &
$strWW& 2
]WW2 3
??WW4 6
throwWW7 <
newWW= @%
InvalidOperationExceptionWWA Z
(WWZ [
$strWW[ z
)WWz {
)WW{ |
)WW| }
,WW} ~
ValidateIssuerXX 
=XX 
falseXX "
,XX" #
ValidateAudienceYY 
=YY 
falseYY $
,YY$ %
	ClockSkewZZ 
=ZZ 
TimeSpanZZ  
.ZZ  !
ZeroZZ! %
,ZZ% &
}[[ 	
;[[	 

}\\ 
)\\ 
;\\ 
builder__ 
.__ 
Services__ 
.__ #
AddAuthorizationBuilder__ (
(__( )
)__) *
.`` 
	AddPolicy`` 
(`` 
$str``  
,``  !
policy``" (
=>``) +
policyaa 
.aa 
Requirementsaa 
.aa 
Addaa 
(aa  
newaa  #!
PermissionRequirementaa$ 9
(aa9 :
$straa: F
)aaF G
)aaG H
)aaH I
.bb 
	AddPolicybb 
(bb 
$strbb !
,bb! "
policybb# )
=>bb* ,
policycc 
.cc 
Requirementscc 
.cc 
Addcc 
(cc  
newcc  #!
PermissionRequirementcc$ 9
(cc9 :
$strcc: G
)ccG H
)ccH I
)ccI J
.dd 
	AddPolicydd 
(dd 
$strdd "
,dd" #
policydd$ *
=>dd+ -
policyee 
.ee 
Requirementsee 
.ee 
Addee 
(ee  
newee  #!
PermissionRequirementee$ 9
(ee9 :
$stree: H
)eeH I
)eeI J
)eeJ K
.ff 
	AddPolicyff 
(ff 
$strff '
,ff' (
policyff) /
=>ff0 2
policygg 
.gg 
Requirementsgg 
.gg 
Addgg 
(gg  
newgg  #'
IdentityProviderRequirementgg$ ?
(gg? @
$strgg@ L
)ggL M
)ggM N
)ggN O
.hh 
	AddPolicyhh 
(hh 
$strhh  
,hh  !
policyhh" (
=>hh) +
policyii 
.ii 
Requirementsii 
.ii 
Addii 
(ii  
newii  # 
AuthLevelRequirementii$ 8
(ii8 9
$strii9 ?
)ii? @
)ii@ A
)iiA B
.jj 
	AddPolicyjj 
(jj 
$strjj 2
,jj2 3
policyjj4 :
=>jj; =
policykk 
.kk 
RequireAssertionkk 
(kk  
contextkk  '
=>kk( *
contextll 
.ll 
Userll 
.ll 
HasClaimll !
(ll! "
$strll" .
,ll. /
$strll0 <
)ll< =
||ll> @
contextmm 
.mm 
Usermm 
.mm 
IsInRolemm !
(mm! "
$strmm" )
)mm) *
)mm* +
)mm+ ,
.nn 
	AddPolicynn 
(nn 
$strnn 3
,nn3 4
policynn5 ;
=>nn< >
policyoo 
.oo 
RequireAssertionoo 
(oo  
contextoo  '
=>oo( *
contextpp 
.pp 
Userpp 
.pp 
HasClaimpp !
(pp! "
$strpp" .
,pp. /
$strpp0 =
)pp= >
||pp? A
contextqq 
.qq 
Userqq 
.qq 
IsInRoleqq !
(qq! "
$strqq" )
)qq) *
)qq* +
)qq+ ,
.rr 
	AddPolicyrr 
(rr 
$strrr 4
,rr4 5
policyrr6 <
=>rr= ?
policyss 
.ss 
RequireAssertionss 
(ss  
contextss  '
=>ss( *
contexttt 
.tt 
Usertt 
.tt 
HasClaimtt !
(tt! "
$strtt" .
,tt. /
$strtt0 >
)tt> ?
||tt@ B
contextuu 
.uu 
Useruu 
.uu 
IsInRoleuu !
(uu! "
$struu" )
)uu) *
)uu* +
)uu+ ,
;uu, -
builderxx 
.xx 
Servicesxx 
.xx 
	AddScopedxx 
<xx !
IAuthorizationHandlerxx 0
,xx0 1
PermissionHandlerxx2 C
>xxC D
(xxD E
)xxE F
;xxF G
builderyy 
.yy 
Servicesyy 
.yy 
	AddScopedyy 
<yy !
IAuthorizationHandleryy 0
,yy0 1 
AnyPermissionHandleryy2 F
>yyF G
(yyG H
)yyH I
;yyI J
builderzz 
.zz 
Serviceszz 
.zz 
	AddScopedzz 
<zz !
IAuthorizationHandlerzz 0
,zz0 1!
AllPermissionsHandlerzz2 G
>zzG H
(zzH I
)zzI J
;zzJ K
builder{{ 
.{{ 
Services{{ 
.{{ 
	AddScoped{{ 
<{{ !
IAuthorizationHandler{{ 0
,{{0 1
RoleHandler{{2 =
>{{= >
({{> ?
){{? @
;{{@ A
builder|| 
.|| 
Services|| 
.|| 
	AddScoped|| 
<|| !
IAuthorizationHandler|| 0
,||0 1#
IdentityProviderHandler||2 I
>||I J
(||J K
)||K L
;||L M
builder}} 
.}} 
Services}} 
.}} 
	AddScoped}} 
<}} !
IAuthorizationHandler}} 0
,}}0 1
AuthLevelHandler}}2 B
>}}B C
(}}C D
)}}D E
;}}E F
builderÄÄ 
.
ÄÄ 
Services
ÄÄ 
.
ÄÄ 
	AddScoped
ÄÄ 
<
ÄÄ 

JwtService
ÄÄ %
>
ÄÄ% &
(
ÄÄ& '
)
ÄÄ' (
;
ÄÄ( )
builderÅÅ 
.
ÅÅ 
Services
ÅÅ 
.
ÅÅ 
	AddScoped
ÅÅ 
<
ÅÅ 
LocalRestClient
ÅÅ *
>
ÅÅ* +
(
ÅÅ+ ,
)
ÅÅ, -
;
ÅÅ- .
builderÑÑ 
.
ÑÑ 
Services
ÑÑ 
.
ÑÑ 
AddHealthChecks
ÑÑ  
(
ÑÑ  !
)
ÑÑ! "
.
ÖÖ 
AddCheck
ÖÖ 
(
ÖÖ 
$str
ÖÖ 
,
ÖÖ 
(
ÖÖ 
)
ÖÖ 
=>
ÖÖ 
HealthCheckResult
ÖÖ -
.
ÖÖ- .
Healthy
ÖÖ. 5
(
ÖÖ5 6
)
ÖÖ6 7
,
ÖÖ7 8
new
ÖÖ9 <
[
ÖÖ< =
]
ÖÖ= >
{
ÖÖ? @
$str
ÖÖA H
}
ÖÖI J
)
ÖÖJ K
;
ÖÖK L
builderàà 
.
àà 
Services
àà 
.
àà 
AddOpenTelemetry
àà !
(
àà! "
)
àà" #
.
ââ 
ConfigureResource
ââ 
(
ââ 
resource
ââ 
=>
ââ  "
resource
ââ# +
.
ää 	

AddService
ää	 
(
ää 
$str
ää *
,
ää* +
serviceVersion
ää, :
:
ää: ;
$str
ää< C
)
ääC D
.
ãã 	
AddAttributes
ãã	 
(
ãã 
new
ãã 

Dictionary
ãã %
<
ãã% &
string
ãã& ,
,
ãã, -
object
ãã. 4
>
ãã4 5
{
åå 	
[
çç 
$str
çç %
]
çç% &
=
çç' (
builder
çç) 0
.
çç0 1
Environment
çç1 <
.
çç< =
EnvironmentName
çç= L
,
ççL M
}
éé 	
)
éé	 

)
éé
 
.
èè 
WithTracing
èè 
(
èè 
tracing
èè 
=>
èè 
tracing
èè #
.
êê 	*
AddAspNetCoreInstrumentation
êê	 %
(
êê% &
)
êê& '
.
ëë 	*
AddHttpClientInstrumentation
ëë	 %
(
ëë% &
)
ëë& '
.
íí 	
AddOtlpExporter
íí	 
(
íí 
)
íí 
)
íí 
.
ìì 
WithMetrics
ìì 
(
ìì 
metrics
ìì 
=>
ìì 
metrics
ìì #
.
îî 	*
AddAspNetCoreInstrumentation
îî	 %
(
îî% &
)
îî& '
.
ïï 	*
AddHttpClientInstrumentation
ïï	 %
(
ïï% &
)
ïï& '
.
ññ 	'
AddRuntimeInstrumentation
ññ	 "
(
ññ" #
)
ññ# $
.
óó 	
AddOtlpExporter
óó	 
(
óó 
)
óó 
)
óó 
;
óó 
iföö 
(
öö 
!
öö 
builder
öö 
.
öö 
Environment
öö 
.
öö 
EnvironmentName
öö (
.
öö( )
Equals
öö) /
(
öö/ 0
$str
öö0 9
,
öö9 :
StringComparison
öö; K
.
ööK L
OrdinalIgnoreCase
ööL ]
)
öö] ^
)
öö^ _
{õõ 
builder
úú 
.
úú 
Services
úú 
.
úú 
AddSingleton
úú !
<
úú! "
MetricServer
úú" .
>
úú. /
(
úú/ 0
)
úú0 1
;
úú1 2
}ùù 
varüü 
app
üü 
=
üü 	
builder
üü
 
.
üü 
Build
üü 
(
üü 
)
üü 
;
üü 
if¢¢ 
(
¢¢ 
app
¢¢ 
.
¢¢ 
Environment
¢¢ 
.
¢¢ 
IsDevelopment
¢¢ !
(
¢¢! "
)
¢¢" #
)
¢¢# $
{££ 
app
§§ 
.
§§ 

UseSwagger
§§ 
(
§§ 
)
§§ 
;
§§ 
app
•• 
.
•• 
UseSwaggerUI
•• 
(
•• 
)
•• 
;
•• 
}¶¶ 
app©© 
.
©© 
UseHttpMetrics
©© 
(
©© 
)
©© 
;
©© 
app¨¨ 
.
¨¨ 
UseAuthentication
¨¨ 
(
¨¨ 
)
¨¨ 
;
¨¨ 
app≠≠ 
.
≠≠ 
UseAuthorization
≠≠ 
(
≠≠ 
)
≠≠ 
;
≠≠ 
app∞∞ 
.
∞∞ 
MapControllers
∞∞ 
(
∞∞ 
)
∞∞ 
;
∞∞ 
app≥≥ 
.
≥≥ 
MapHealthChecks
≥≥ 
(
≥≥ 
$str
≥≥ #
,
≥≥# $
new
≥≥% ( 
HealthCheckOptions
≥≥) ;
{¥¥ 
	Predicate
µµ 
=
µµ 
check
µµ 
=>
µµ 
check
µµ 
.
µµ 
Tags
µµ #
.
µµ# $
Contains
µµ$ ,
(
µµ, -
$str
µµ- 4
)
µµ4 5
,
µµ5 6
}∂∂ 
)
∂∂ 
;
∂∂ 
app∏∏ 
.
∏∏ 
MapHealthChecks
∏∏ 
(
∏∏ 
$str
∏∏ "
,
∏∏" #
new
∏∏$ ' 
HealthCheckOptions
∏∏( :
{ππ 
	Predicate
∫∫ 
=
∫∫ 
_
∫∫ 
=>
∫∫ 
false
∫∫ 
,
∫∫ 
}ªª 
)
ªª 
;
ªª 
appææ 
.
ææ 

MapMetrics
ææ 
(
ææ 
)
ææ 
;
ææ 
if¡¡ 
(
¡¡ 
!
¡¡ 
app
¡¡ 
.
¡¡ 	
Environment
¡¡	 
.
¡¡ 
EnvironmentName
¡¡ $
.
¡¡$ %
Equals
¡¡% +
(
¡¡+ ,
$str
¡¡, 5
,
¡¡5 6
StringComparison
¡¡7 G
.
¡¡G H
OrdinalIgnoreCase
¡¡H Y
)
¡¡Y Z
)
¡¡Z [
{¬¬ 
var
√√ 
metricServer
√√ 
=
√√ 
app
√√ 
.
√√ 
Services
√√ #
.
√√# $ 
GetRequiredService
√√$ 6
<
√√6 7
MetricServer
√√7 C
>
√√C D
(
√√D E
)
√√E F
;
√√F G
metricServer
ƒƒ 
.
ƒƒ 
Start
ƒƒ 
(
ƒƒ 
)
ƒƒ 
;
ƒƒ 
}≈≈ 
app«« 
.
«« 
Run
«« 
(
«« 
)
«« 	
;
««	 

public   
static
   
partial
   
class
   
Program
   #
{ÀÀ 
}ÃÃ ˘b
a/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Controllers/VulnerableJWTController.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Controllers *
;* +
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
public 
class #
VulnerableJwtController $
:% &
ControllerBase' 5
{ 
private 
const 
string 

WeakSecret #
=$ %
$str& Q
;Q R
private 
const 
string 
TokenKey !
=" #
$str$ +
;+ ,
private 
const 
string 
AlgorithmKey %
=& '
$str( 3
;3 4
private 
const 
string 
ValidKey !
=" #
$str$ +
;+ ,
private 
const 
string 

DecodedKey #
=$ %
$str& /
;/ 0
private 
const 
string 
	HeaderKey "
=# $
$str% -
;- .
private 
const 
string 

PayloadKey #
=$ %
$str& /
;/ 0
private 
const 
string 
SignatureKey %
=& '
$str( 3
;3 4
private 
const 
string 
ErrorKey !
=" #
$str$ +
;+ ,
private 
const 
string 

MessageKey #
=$ %
$str& /
;/ 0
public 
#
VulnerableJwtController "
(" #
)# $
{ 
} 
[$$ 
HttpPost$$ 
($$ 
$str$$ 
)$$ 
]$$ 
public%% 

IActionResult%% 
CreateToken%% $
(%%$ %
[%%% &
FromBody%%& .
]%%. /

Dictionary%%0 :
<%%: ;
string%%; A
,%%A B
object%%C I
>%%I J
payload%%K R
)%%R S
{&& 
try'' 
{(( 	
var** 
header** 
=** 
Convert**  
.**  !
ToBase64String**! /
(**/ 0
Encoding**0 8
.**8 9
UTF8**9 =
.**= >
GetBytes**> F
(**F G
$str**G l
)**l m
)**m n
;**n o
var++ 

payloadStr++ 
=++ 
Convert++ $
.++$ %
ToBase64String++% 3
(++3 4
Encoding++4 <
.++< =
UTF8++= A
.++A B
GetBytes++B J
(++J K
JsonSerializer++K Y
.++Y Z
	Serialize++Z c
(++c d
payload++d k
)++k l
)++l m
)++m n
;++n o
var,, 
	signature,, 
=,, 
Convert,, #
.,,# $
ToBase64String,,$ 2
(,,2 3
Encoding,,3 ;
.,,; <
UTF8,,< @
.,,@ A
GetBytes,,A I
(,,I J

WeakSecret,,J T
),,T U
),,U V
;,,V W
var.. 
token.. 
=.. 
$".. 
{.. 
header.. !
}..! "
$str.." #
{..# $

payloadStr..$ .
}... /
$str../ 0
{..0 1
	signature..1 :
}..: ;
"..; <
;..< =
return// 
Ok// 
(// 
token// 
)// 
;// 
}00 	
catch11 
(11 
	Exception11 
e11 
)11 
{22 	
return33 

BadRequest33 
(33 
$"33  
$str33  6
{336 7
e337 8
.338 9
Message339 @
}33@ A
"33A B
)33B C
;33C D
}44 	
}55 
[:: 
HttpPost:: 
(:: 
$str:: 
):: 
]:: 
public;; 

IActionResult;; 
VerifyToken;; $
(;;$ %
[;;% &
FromBody;;& .
];;. /

Dictionary;;0 :
<;;: ;
string;;; A
,;;A B
string;;C I
>;;I J
?;;J K
request;;L S
);;S T
{<< 
if== 

(== 
request== 
==== 
null== 
)== 
{>> 	
return?? 

BadRequest?? 
(?? 
$str?? 3
)??3 4
;??4 5
}@@ 	
tryBB 
{CC 	
varDD 
tokenDD 
=DD 
requestDD 
.DD  
GetValueOrDefaultDD  1
(DD1 2
TokenKeyDD2 :
,DD: ;
stringDD< B
.DDB C
EmptyDDC H
)DDH I
;DDI J
varGG 
responseGG 
=GG 
newGG 

DictionaryGG )
<GG) *
stringGG* 0
,GG0 1
objectGG2 8
>GG8 9
{HH 
[II 
ValidKeyII 
]II 
=II 
trueII !
,II! "
[JJ 
TokenKeyJJ 
]JJ 
=JJ 
tokenJJ "
,JJ" #
[KK 

MessageKeyKK 
]KK 
=KK 
$strKK I
,KKI J
}LL 
;LL 
returnNN 
OkNN 
(NN 
responseNN 
)NN 
;NN  
}OO 	
catchPP 
(PP 
	ExceptionPP 
ePP 
)PP 
{QQ 	
varRR 
responseRR 
=RR 
newRR 

DictionaryRR )
<RR) *
stringRR* 0
,RR0 1
objectRR2 8
>RR8 9
{SS 
[TT 
ValidKeyTT 
]TT 
=TT 
falseTT "
,TT" #
[UU 
ErrorKeyUU 
]UU 
=UU 
eUU 
.UU 
MessageUU &
,UU& '
}VV 
;VV 
returnXX 
OkXX 
(XX 
responseXX 
)XX 
;XX  
}YY 	
}ZZ 
[__ 
HttpGet__ 
(__ 
$str__ 
)__ 
]__ 
public`` 

IActionResult`` 
DecodeToken`` $
(``$ %
[``% &
	FromQuery``& /
]``/ 0
string``1 7
token``8 =
)``= >
{aa !
ArgumentNullExceptionbb 
.bb 
ThrowIfNullbb )
(bb) *
tokenbb* /
)bb/ 0
;bb0 1
trydd 
{ee 	
vargg 
partsgg 
=gg 
tokengg 
.gg 
Splitgg #
(gg# $
$chargg$ '
)gg' (
;gg( )
varhh 
responsehh 
=hh 
newhh 

Dictionaryhh )
<hh) *
stringhh* 0
,hh0 1
objecthh2 8
>hh8 9
{ii 
[jj 

DecodedKeyjj 
]jj 
=jj 
truejj #
,jj# $
[kk 
	HeaderKeykk 
]kk 
=kk 
partskk #
.kk# $
Lengthkk$ *
>kk+ ,
$numkk- .
?kk/ 0
Encodingkk1 9
.kk9 :
UTF8kk: >
.kk> ?
	GetStringkk? H
(kkH I
ConvertkkI P
.kkP Q
FromBase64StringkkQ a
(kka b
partskkb g
[kkg h
$numkkh i
]kki j
)kkj k
)kkk l
:kkm n
stringkko u
.kku v
Emptykkv {
,kk{ |
[ll 

PayloadKeyll 
]ll 
=ll 
partsll $
.ll$ %
Lengthll% +
>ll, -
$numll. /
?ll0 1
Encodingll2 :
.ll: ;
UTF8ll; ?
.ll? @
	GetStringll@ I
(llI J
ConvertllJ Q
.llQ R
FromBase64StringllR b
(llb c
partsllc h
[llh i
$numlli j
]llj k
)llk l
)lll m
:lln o
stringllp v
.llv w
Emptyllw |
,ll| }
[mm 
SignatureKeymm 
]mm 
=mm  
partsmm! &
.mm& '
Lengthmm' -
>mm. /
$nummm0 1
?mm2 3
partsmm4 9
[mm9 :
$nummm: ;
]mm; <
:mm= >
stringmm? E
.mmE F
EmptymmF K
,mmK L
}nn 
;nn 
returnpp 
Okpp 
(pp 
responsepp 
)pp 
;pp  
}qq 	
catchrr 
(rr 
	Exceptionrr 
err 
)rr 
{ss 	
vartt 
responsett 
=tt 
newtt 

Dictionarytt )
<tt) *
stringtt* 0
,tt0 1
objecttt2 8
>tt8 9
{uu 
[vv 

DecodedKeyvv 
]vv 
=vv 
falsevv $
,vv$ %
[ww 
ErrorKeyww 
]ww 
=ww 
eww 
.ww 
Messageww &
,ww& '
}xx 
;xx 
returnzz 
Okzz 
(zz 
responsezz 
)zz 
;zz  
}{{ 	
}|| 
[
ÅÅ 
HttpPost
ÅÅ 
(
ÅÅ 
$str
ÅÅ $
)
ÅÅ$ %
]
ÅÅ% &
public
ÇÇ 

IActionResult
ÇÇ  
VerifyAnyAlgorithm
ÇÇ +
(
ÇÇ+ ,
[
ÇÇ, -
FromBody
ÇÇ- 5
]
ÇÇ5 6

Dictionary
ÇÇ7 A
<
ÇÇA B
string
ÇÇB H
,
ÇÇH I
string
ÇÇJ P
>
ÇÇP Q
?
ÇÇQ R
request
ÇÇS Z
)
ÇÇZ [
{
ÉÉ 
if
ÑÑ 

(
ÑÑ 
request
ÑÑ 
==
ÑÑ 
null
ÑÑ 
)
ÑÑ 
{
ÖÖ 	
return
ÜÜ 

BadRequest
ÜÜ 
(
ÜÜ 
$str
ÜÜ 3
)
ÜÜ3 4
;
ÜÜ4 5
}
áá 	
try
ââ 
{
ää 	
var
ãã 
token
ãã 
=
ãã 
request
ãã 
.
ãã  
GetValueOrDefault
ãã  1
(
ãã1 2
TokenKey
ãã2 :
,
ãã: ;
string
ãã< B
.
ããB C
Empty
ããC H
)
ããH I
;
ããI J
var
åå 
	algorithm
åå 
=
åå 
request
åå #
.
åå# $
GetValueOrDefault
åå$ 5
(
åå5 6
AlgorithmKey
åå6 B
,
ååB C
string
ååD J
.
ååJ K
Empty
ååK P
)
ååP Q
;
ååQ R
var
èè 
response
èè 
=
èè 
new
èè 

Dictionary
èè )
<
èè) *
string
èè* 0
,
èè0 1
object
èè2 8
>
èè8 9
{
êê 
[
ëë 
ValidKey
ëë 
]
ëë 
=
ëë 
true
ëë !
,
ëë! "
[
íí 
AlgorithmKey
íí 
]
íí 
=
íí  
	algorithm
íí! *
,
íí* +
[
ìì 
TokenKey
ìì 
]
ìì 
=
ìì 
token
ìì "
,
ìì" #
[
îî 

MessageKey
îî 
]
îî 
=
îî 
$"
îî !
$str
îî! H
{
îîH I
	algorithm
îîI R
}
îîR S
"
îîS T
,
îîT U
}
ïï 
;
ïï 
return
óó 
Ok
óó 
(
óó 
response
óó 
)
óó 
;
óó  
}
òò 	
catch
ôô 
(
ôô 
	Exception
ôô 
e
ôô 
)
ôô 
{
öö 	
var
õõ 
response
õõ 
=
õõ 
new
õõ 

Dictionary
õõ )
<
õõ) *
string
õõ* 0
,
õõ0 1
object
õõ2 8
>
õõ8 9
{
úú 
[
ùù 
ValidKey
ùù 
]
ùù 
=
ùù 
false
ùù "
,
ùù" #
[
ûû 
ErrorKey
ûû 
]
ûû 
=
ûû 
e
ûû 
.
ûû 
Message
ûû &
,
ûû& '
}
üü 
;
üü 
return
°° 
Ok
°° 
(
°° 
response
°° 
)
°° 
;
°°  
}
¢¢ 	
}
££ 
}§§ ∂ì
Y/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Controllers/TokenController.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Controllers *
;* +
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
[ 
Tags 
( 
$str 
) 
] 
public 
class 
TokenController 
: 
ControllerBase -
{ 
private 
readonly 

JwtService 

jwtService  *
;* +
private 
const 
string 
CacheReadPermission ,
=- .
$str/ ;
;; <
private 
const 
string  
CacheWritePermission -
=. /
$str0 =
;= >
private 
const 
string 
DefaultRole $
=% &
$str' -
;- .
private 
static 
readonly 
string "
[" #
]# $

AdminRoles% /
=0 1
{2 3
$str4 ;
,; <
$str= C
}D E
;E F
private 
static 
readonly 
string "
[" #
]# $
AdminPermissions% 5
=6 7
{8 9
CacheReadPermission: M
,M N 
CacheWritePermissionO c
,c d
$stre s
}t u
;u v
private 
static 
readonly 
string "
[" #
]# $
	UserRoles% .
=/ 0
{1 2
DefaultRole3 >
}? @
;@ A
private 
static 
readonly 
string "
[" #
]# $
UserPermissions% 4
=5 6
{7 8
CacheReadPermission9 L
}M N
;N O
private 
static 
readonly 
string "
[" #
]# $
ReadOnlyRoles% 2
=3 4
{5 6
$str7 A
}B C
;C D
private 
static 
readonly 
string "
[" #
]# $
ReadOnlyPermissions% 8
=9 :
{; <
CacheReadPermission= P
}Q R
;R S
private 
static 
readonly 
string "
[" #
]# $
WriterRoles% 0
=1 2
{3 4
$str5 =
}> ?
;? @
private   
static   
readonly   
string   "
[  " #
]  # $
WriterPermissions  % 6
=  7 8
{  9 :
CacheReadPermission  ; N
,  N O 
CacheWritePermission  P d
}  e f
;  f g
public"" 

TokenController"" 
("" 

JwtService"" %

jwtService""& 0
)""0 1
{## 
this$$ 
.$$ 

jwtService$$ 
=$$ 

jwtService$$ $
;$$$ %
}%% 
[** 
HttpPost** 
(** 
$str** 
)** 
]** 
[++  
ProducesResponseType++ 
(++ 
typeof++  
(++  !
object++! '
)++' (
,++( )
$num++* -
)++- .
]++. /
[,,  
ProducesResponseType,, 
(,, 
$num,, 
),, 
],, 
public-- 

IActionResult-- 
GenerateToken-- &
(--& '
[.. 	
	FromQuery..	 
,.. 
Required.. 
].. 
string.. $
username..% -
,..- .
[// 	
	FromQuery//	 
]// 
string// 
?// 
roles// !
=//" #
null//$ (
,//( )
[00 	
	FromQuery00	 
]00 
string00 
?00 
permissions00 '
=00( )
null00* .
)00. /
{11 
var33 
	rolesList33 
=33 
string33 
.33 
IsNullOrEmpty33 ,
(33, -
roles33- 2
)332 3
?44 
new44 
List44 
<44 
string44 
>44 
{44  
DefaultRole44! ,
}44- .
:55 
roles55 
.55 
Split55 
(55 
$char55 
)55 
.55 
Select55 %
(55% &
r55& '
=>55( *
r55+ ,
.55, -
Trim55- 1
(551 2
)552 3
)553 4
.554 5
ToList555 ;
(55; <
)55< =
;55= >
var77 
permissionsList77 
=77 
string77 $
.77$ %
IsNullOrEmpty77% 2
(772 3
permissions773 >
)77> ?
?88 
new88 
List88 
<88 
string88 
>88 
{88  
CacheReadPermission88! 4
}885 6
:99 
permissions99 
.99 
Split99 
(99  
$char99  #
)99# $
.99$ %
Select99% +
(99+ ,
p99, -
=>99. 0
p991 2
.992 3
Trim993 7
(997 8
)998 9
)999 :
.99: ;
ToList99; A
(99A B
)99B C
;99C D
var;; 
token;; 
=;; 
this;; 
.;; 

jwtService;; #
.;;# $
GenerateToken;;$ 1
(;;1 2
username;;2 :
,;;: ;
	rolesList;;< E
,;;E F
permissionsList;;G V
);;V W
;;;W X
var== 
response== 
=== 
new== 
{>> 	
token?? 
,?? 
username@@ 
,@@ 
rolesAA 
=AA 
	rolesListAA 
,AA 
permissionsBB 
=BB 
permissionsListBB )
,BB) *
	expiresAtCC 
=CC 
DateTimeCC  
.CC  !
UtcNowCC! '
.CC' (
AddHoursCC( 0
(CC0 1
$numCC1 2
)CC2 3
,CC3 4
}DD 	
;DD	 

returnFF 
OkFF 
(FF 
responseFF 
)FF 
;FF 
}GG 
[LL 
HttpGetLL 
(LL 
$strLL  
)LL  !
]LL! "
[MM  
ProducesResponseTypeMM 
(MM 
typeofMM  
(MM  !
objectMM! '
)MM' (
,MM( )
$numMM* -
)MM- .
]MM. /
[NN  
ProducesResponseTypeNN 
(NN 
$numNN 
)NN 
]NN 
publicOO 

IActionResultOO #
GeneratePredefinedTokenOO 0
(OO0 1
[OO1 2
	FromRouteOO2 ;
]OO; <
stringOO= C
typeOOD H
)OOH I
{PP !
ArgumentNullExceptionQQ 
.QQ 
ThrowIfNullQQ )
(QQ) *
typeQQ* .
)QQ. /
;QQ/ 0
varSS 
	upperTypeSS 
=SS 
typeSS 
.SS 
ToUpperInvariantSS -
(SS- .
)SS. /
;SS/ 0
returnTT 
	upperTypeTT 
switchTT 
{UU 	
$strVV 
=>VV 
thisVV 
.VV 
GenerateAdminTokenVV .
(VV. /
)VV/ 0
,VV0 1
$strWW 
=>WW 
thisWW 
.WW 
GenerateUserTokenWW ,
(WW, -
)WW- .
,WW. /
$strXX 
=>XX 
thisXX 
.XX !
GenerateReadOnlyTokenXX 4
(XX4 5
)XX5 6
,XX6 7
$strYY 
=>YY 
thisYY 
.YY 
GenerateWriteTokenYY .
(YY. /
)YY/ 0
,YY0 1
_ZZ 
=>ZZ 

BadRequestZZ 
(ZZ 
$"ZZ 
$strZZ H
"ZZH I
)ZZI J
,ZZJ K
}[[ 	
;[[	 

}\\ 
[aa 
HttpGetaa 
(aa 
$straa 
)aa 
]aa 
[bb  
ProducesResponseTypebb 
(bb 
typeofbb  
(bb  !
objectbb! '
)bb' (
,bb( )
$numbb* -
)bb- .
]bb. /
publiccc 

IActionResultcc 
GenerateAdminTokencc +
(cc+ ,
)cc, -
{dd 
varee 
tokenee 
=ee 
thisee 
.ee 

jwtServiceee #
.ee# $
GenerateTokenee$ 1
(ee1 2
$strff 
,ff 
newgg 
Listgg 
<gg 
stringgg 
>gg 
{gg 
$strgg &
,gg& '
$strgg( .
}gg/ 0
,gg0 1
newhh 
Listhh 
<hh 
stringhh 
>hh 
{hh 
CacheReadPermissionhh 2
,hh2 3 
CacheWritePermissionhh4 H
,hhH I
$strhhJ X
}hhY Z
)hhZ [
;hh[ \
returnjj 
Okjj 
(jj 
newjj 
{kk 	
tokenll 
,ll 
usernamemm 
=mm 
$strmm 
,mm 
rolesnn 
=nn 

AdminRolesnn 
,nn 
permissionsoo 
=oo 
AdminPermissionsoo *
,oo* +
	expiresAtpp 
=pp 
DateTimepp  
.pp  !
UtcNowpp! '
.pp' (
AddHourspp( 0
(pp0 1
$numpp1 2
)pp2 3
,pp3 4
}qq 	
)qq	 

;qq
 
}rr 
[ww 
HttpGetww 
(ww 
$strww 
)ww 
]ww 
[xx  
ProducesResponseTypexx 
(xx 
typeofxx  
(xx  !
objectxx! '
)xx' (
,xx( )
$numxx* -
)xx- .
]xx. /
publicyy 

IActionResultyy 
GenerateUserTokenyy *
(yy* +
)yy+ ,
{zz 
var{{ 
token{{ 
={{ 
this{{ 
.{{ 

jwtService{{ #
.{{# $
GenerateToken{{$ 1
({{1 2
$str|| 
,|| 
new}} 
List}} 
<}} 
string}} 
>}} 
{}} 
DefaultRole}} *
}}}+ ,
,}}, -
new~~ 
List~~ 
<~~ 
string~~ 
>~~ 
{~~ 
CacheReadPermission~~ 2
}~~3 4
)~~4 5
;~~5 6
return
ÄÄ 
Ok
ÄÄ 
(
ÄÄ 
new
ÄÄ 
{
ÅÅ 	
token
ÇÇ 
,
ÇÇ 
username
ÉÉ 
=
ÉÉ 
$str
ÉÉ 
,
ÉÉ 
roles
ÑÑ 
=
ÑÑ 
	UserRoles
ÑÑ 
,
ÑÑ 
permissions
ÖÖ 
=
ÖÖ 
UserPermissions
ÖÖ )
,
ÖÖ) *
	expiresAt
ÜÜ 
=
ÜÜ 
DateTime
ÜÜ  
.
ÜÜ  !
UtcNow
ÜÜ! '
.
ÜÜ' (
AddHours
ÜÜ( 0
(
ÜÜ0 1
$num
ÜÜ1 2
)
ÜÜ2 3
,
ÜÜ3 4
}
áá 	
)
áá	 

;
áá
 
}
àà 
[
çç 
HttpGet
çç 
(
çç 
$str
çç 
)
çç 
]
çç 
[
éé "
ProducesResponseType
éé 
(
éé 
typeof
éé  
(
éé  !
object
éé! '
)
éé' (
,
éé( )
$num
éé* -
)
éé- .
]
éé. /
public
èè 

IActionResult
èè #
GenerateReadOnlyToken
èè .
(
èè. /
)
èè/ 0
{
êê 
var
ëë 
token
ëë 
=
ëë 
this
ëë 
.
ëë 

jwtService
ëë #
.
ëë# $
GenerateToken
ëë$ 1
(
ëë1 2
$str
íí 
,
íí 
new
ìì 
List
ìì 
<
ìì 
string
ìì 
>
ìì 
{
ìì 
$str
ìì )
}
ìì* +
,
ìì+ ,
new
îî 
List
îî 
<
îî 
string
îî 
>
îî 
{
îî !
CacheReadPermission
îî 2
}
îî3 4
)
îî4 5
;
îî5 6
return
ññ 
Ok
ññ 
(
ññ 
new
ññ 
{
óó 	
token
òò 
,
òò 
username
ôô 
=
ôô 
$str
ôô !
,
ôô! "
roles
öö 
=
öö 
ReadOnlyRoles
öö !
,
öö! "
permissions
õõ 
=
õõ !
ReadOnlyPermissions
õõ -
,
õõ- .
	expiresAt
úú 
=
úú 
DateTime
úú  
.
úú  !
UtcNow
úú! '
.
úú' (
AddHours
úú( 0
(
úú0 1
$num
úú1 2
)
úú2 3
,
úú3 4
}
ùù 	
)
ùù	 

;
ùù
 
}
ûû 
[
££ 
HttpGet
££ 
(
££ 
$str
££ 
)
££ 
]
££ 
[
§§ "
ProducesResponseType
§§ 
(
§§ 
typeof
§§  
(
§§  !
object
§§! '
)
§§' (
,
§§( )
$num
§§* -
)
§§- .
]
§§. /
public
•• 

IActionResult
••  
GenerateWriteToken
•• +
(
••+ ,
)
••, -
{
¶¶ 
var
ßß 
token
ßß 
=
ßß 
this
ßß 
.
ßß 

jwtService
ßß #
.
ßß# $
GenerateToken
ßß$ 1
(
ßß1 2
$str
®® 
,
®® 
new
©© 
List
©© 
<
©© 
string
©© 
>
©© 
{
©© 
$str
©© '
}
©©( )
,
©©) *
new
™™ 
List
™™ 
<
™™ 
string
™™ 
>
™™ 
{
™™ !
CacheReadPermission
™™ 2
,
™™2 3"
CacheWritePermission
™™4 H
}
™™I J
)
™™J K
;
™™K L
return
¨¨ 
Ok
¨¨ 
(
¨¨ 
new
¨¨ 
{
≠≠ 	
token
ÆÆ 
,
ÆÆ 
username
ØØ 
=
ØØ 
$str
ØØ 
,
ØØ  
roles
∞∞ 
=
∞∞ 
WriterRoles
∞∞ 
,
∞∞  
permissions
±± 
=
±± 
WriterPermissions
±± +
,
±±+ ,
	expiresAt
≤≤ 
=
≤≤ 
DateTime
≤≤  
.
≤≤  !
UtcNow
≤≤! '
.
≤≤' (
AddHours
≤≤( 0
(
≤≤0 1
$num
≤≤1 2
)
≤≤2 3
,
≤≤3 4
}
≥≥ 	
)
≥≥	 

;
≥≥
 
}
¥¥ 
[
ππ 
HttpPost
ππ 
(
ππ 
$str
ππ 
)
ππ 
]
ππ 
[
∫∫ "
ProducesResponseType
∫∫ 
(
∫∫ 
typeof
∫∫  
(
∫∫  !
object
∫∫! '
)
∫∫' (
,
∫∫( )
$num
∫∫* -
)
∫∫- .
]
∫∫. /
[
ªª "
ProducesResponseType
ªª 
(
ªª 
$num
ªª 
)
ªª 
]
ªª 
public
ºº 

IActionResult
ºº 
ValidateToken
ºº &
(
ºº& '
[
ºº' (
FromBody
ºº( 0
]
ºº0 1

Dictionary
ºº2 <
<
ºº< =
string
ºº= C
,
ººC D
string
ººE K
>
ººK L
?
ººL M
request
ººN U
)
ººU V
{
ΩΩ 
if
ææ 

(
ææ 
request
ææ 
==
ææ 
null
ææ 
)
ææ 
{
øø 	
return
¿¿ 

BadRequest
¿¿ 
(
¿¿ 
$str
¿¿ 3
)
¿¿3 4
;
¿¿4 5
}
¡¡ 	
if
√√ 

(
√√ 
!
√√ 
request
√√ 
.
√√ 
TryGetValue
√√  
(
√√  !
$str
√√! (
,
√√( )
out
√√* -
var
√√. 1
token
√√2 7
)
√√7 8
||
√√9 ;
string
√√< B
.
√√B C 
IsNullOrWhiteSpace
√√C U
(
√√U V
token
√√V [
)
√√[ \
)
√√\ ]
{
ƒƒ 	
return
≈≈ 

BadRequest
≈≈ 
(
≈≈ 
$str
≈≈ 1
)
≈≈1 2
;
≈≈2 3
}
∆∆ 	
try
»» 
{
…… 	
var
   
isValid
   
=
   
this
   
.
   

jwtService
   )
.
  ) *
ValidateToken
  * 7
(
  7 8
token
  8 =
)
  = >
;
  > ?
var
ÀÀ 
username
ÀÀ 
=
ÀÀ 

JwtService
ÀÀ %
.
ÀÀ% &
ExtractUsername
ÀÀ& 5
(
ÀÀ5 6
token
ÀÀ6 ;
)
ÀÀ; <
;
ÀÀ< =
var
ÃÃ 
roles
ÃÃ 
=
ÃÃ 

JwtService
ÃÃ "
.
ÃÃ" #
ExtractRoles
ÃÃ# /
(
ÃÃ/ 0
token
ÃÃ0 5
)
ÃÃ5 6
;
ÃÃ6 7
var
ÕÕ 
permissions
ÕÕ 
=
ÕÕ 

JwtService
ÕÕ (
.
ÕÕ( ) 
ExtractPermissions
ÕÕ) ;
(
ÕÕ; <
token
ÕÕ< A
)
ÕÕA B
;
ÕÕB C
return
œœ 
Ok
œœ 
(
œœ 
new
œœ 
{
–– 
valid
—— 
=
—— 
isValid
—— 
,
——  
username
““ 
,
““ 
roles
”” 
,
”” 
permissions
‘‘ 
,
‘‘ 
validatedAt
’’ 
=
’’ 
DateTime
’’ &
.
’’& '
UtcNow
’’' -
,
’’- .
}
÷÷ 
)
÷÷ 
;
÷÷ 
}
◊◊ 	
catch
ÿÿ 
(
ÿÿ 
	Exception
ÿÿ 
ex
ÿÿ 
)
ÿÿ 
{
ŸŸ 	
return
⁄⁄ 
Ok
⁄⁄ 
(
⁄⁄ 
new
⁄⁄ 
{
€€ 
valid
‹‹ 
=
‹‹ 
false
‹‹ 
,
‹‹ 
error
›› 
=
›› 
ex
›› 
.
›› 
Message
›› "
,
››" #
validatedAt
ﬁﬁ 
=
ﬁﬁ 
DateTime
ﬁﬁ &
.
ﬁﬁ& '
UtcNow
ﬁﬁ' -
,
ﬁﬁ- .
}
ﬂﬂ 
)
ﬂﬂ 
;
ﬂﬂ 
}
‡‡ 	
}
·· 
}‚‚ ‡'
[/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Controllers/MetricsController.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Controllers *
;* +
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
public 
class 
MetricsController 
:  
ControllerBase! /
{ 
private 
static 
readonly 
Meter !
Meter" '
=( )
new* -
(- .
$str. L
,L M
$strN U
)U V
;V W
private 
static 
readonly 
Counter #
<# $
long$ (
>( )
RequestCounter* 8
=9 :
Meter; @
.@ A
CreateCounterA N
<N O
longO S
>S T
(T U
$strU l
,l m
$str	n è
)
è ê
;
ê ë
private 
static 
readonly 
	Histogram %
<% &
double& ,
>, -
ResponseTime. :
=; <
Meter= B
.B C
CreateHistogramC R
<R S
doubleS Y
>Y Z
(Z [
$str[ q
,q r
$str	s â
)
â ä
;
ä ã
private 
static 
readonly 
Random "
Random# )
=* +
new, /
(/ 0
)0 1
;1 2
[ 
HttpGet 
( 
$str 
) 
] 
public 

async 
Task 
< 
string 
> 
TestMetrics )
() *
)* +
{ 
RequestCounter 
. 
Add 
( 
$num 
) 
; 
using 
var 
activity 
= 
new  
Activity! )
() *
$str* <
)< =
;= >
activity 
. 
Start 
( 
) 
; 
try 
{ 	
await 
Task 
. 
Delay 
( 
Random #
.# $
Next$ (
(( )
$num) +
,+ ,
$num- 0
)0 1
)1 2
;2 3
return   
$str   +
;  + ,
}!! 	
finally"" 
{## 	
activity$$ 
.$$ 
Stop$$ 
($$ 
)$$ 
;$$ 
ResponseTime%% 
.%% 
Record%% 
(%%  
activity%%  (
.%%( )
Duration%%) 1
.%%1 2
TotalMilliseconds%%2 C
)%%C D
;%%D E
}&& 	
}'' 
[)) 
HttpGet)) 
()) 
$str)) 
))) 
])) 
public** 

string** 
IncrementCounter** "
(**" #
[**# $
	FromQuery**$ -
]**- .
int**/ 2
value**3 8
=**9 :
$num**; <
)**< =
{++ 
RequestCounter,, 
.,, 
Add,, 
(,, 
value,,  
),,  !
;,,! "
return-- 
$"-- 
$str-- (
{--( )
value--) .
}--. /
"--/ 0
;--0 1
}.. 
[00 
HttpGet00 
(00 
$str00 
)00 
]00 
public11 

async11 
Task11 
<11 
string11 
>11 
SlowEndpoint11 *
(11* +
)11+ ,
{22 
RequestCounter33 
.33 
Add33 
(33 
$num33 
)33 
;33 
using55 
var55 
activity55 
=55 
new55  
Activity55! )
(55) *
$str55* :
)55: ;
;55; <
activity66 
.66 
Start66 
(66 
)66 
;66 
try88 
{99 	
await;; 
Task;; 
.;; 
Delay;; 
(;; 
Random;; #
.;;# $
Next;;$ (
(;;( )
$num;;) ,
,;;, -
$num;;. 2
);;2 3
);;3 4
;;;4 5
return<< 
$str<< -
;<<- .
}== 	
finally>> 
{?? 	
activity@@ 
.@@ 
Stop@@ 
(@@ 
)@@ 
;@@ 
ResponseTimeAA 
.AA 
RecordAA 
(AA  
activityAA  (
.AA( )
DurationAA) 1
.AA1 2
TotalMillisecondsAA2 C
)AAC D
;AAD E
}BB 	
}CC 
}DD ‰Á
d/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Controllers/EnhancedAuthTestController.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Controllers *
;* +
[ 
ApiController 
] 
[ 
Route 
( 
$str 
) 
] 
[ 
Tags 
( 
$str #
)# $
]$ %
public 
class &
EnhancedAuthTestController '
:( )
ControllerBase* 8
{ 
private 
const 
string 
UnknownValue %
=& '
$str( 1
;1 2
private 
static 
readonly 
string "
[" #
]# $
NonePermissions% 4
=5 6
{7 8
$str9 ?
}@ A
;A B
private 
static 
readonly 
string "
[" #
]# $
BasicPermissions% 5
=6 7
{8 9
$str: H
}I J
;J K
private 
static 
readonly 
string "
[" #
]# $
UserPermissions% 4
=5 6
{7 8
$str9 F
,F G
$strH S
}T U
;U V
private 
static 
readonly 
string "
[" #
]# $
AdminPermissions% 5
=6 7
{8 9
$str: H
,H I
$strJ V
,V W
$strX e
}f g
;g h
private 
static 
readonly 
string "
[" #
]# $!
ManagementPermissions% :
=; <
{= >
$str? R
,R S
$strT f
}g h
;h i
private 
static 
readonly 
string "
[" #
]# $'
IdentityProviderPermissions% @
=A B
{C D
$strE _
}` a
;a b
private 
static 
readonly 
string "
[" #
]# $
HighAuthPermissions% 8
=9 :
{; <
$str= O
}P Q
;Q R
private 
static 
readonly 
string "
[" #
]# $
	NoneRoles% .
=/ 0
{1 2
$str3 9
}: ;
;; <
private 
const 
string 
PermissionClaimType ,
=- .
$str/ ;
;; <
public   
&
EnhancedAuthTestController   %
(  % &
)  & '
{!! 
}"" 
['' 
HttpGet'' 
('' 
$str'' 
)'' 
]'' 
[(( 
AllowAnonymous(( 
](( 
[))  
ProducesResponseType)) 
()) 
typeof))  
())  !
object))! '
)))' (
,))( )
$num))* -
)))- .
])). /
public** 

IActionResult** 
PublicEndpoint** '
(**' (
)**( )
{++ 
return,, 
Ok,, 
(,, 
new,, 
{-- 	
level.. 
=.. 
$num.. 
,.. 
message// 
=// 
$str// D
,//D E
	timestamp00 
=00 
DateTime00  
.00  !
UtcNow00! '
,00' (
user11 
=11 
UnknownValue11 
,11  
roles22 
=22 
	NoneRoles22 
,22 
permissions33 
=33 
NonePermissions33 )
,33) *
}44 	
)44	 

;44
 
}55 
[:: 
HttpGet:: 
(:: 
$str:: 
):: 
]:: 
[;; 
	Authorize;; 
];; 
[<<  
ProducesResponseType<< 
(<< 
typeof<<  
(<<  !
object<<! '
)<<' (
,<<( )
$num<<* -
)<<- .
]<<. /
public== 

IActionResult== !
AuthenticatedEndpoint== .
(==. /
)==/ 0
{>> 
var?? 
user?? 
=?? 
this?? 
.?? 
User?? 
.?? 
Identity?? %
???% &
.??& '
Name??' +
????, .
UnknownValue??/ ;
;??; <
var@@ 
roles@@ 
=@@ 
this@@ 
.@@ 
User@@ 
.@@ 
Claims@@ $
.AA 
WhereAA 
(AA 
cAA 
=>AA 
cAA 
.AA 
TypeAA 
==AA !

ClaimTypesAA" ,
.AA, -
RoleAA- 1
)AA1 2
.BB 
SelectBB 
(BB 
cBB 
=>BB 
cBB 
.BB 
ValueBB  
)BB  !
.CC 
ToArrayCC 
(CC 
)CC 
;CC 
returnEE 
OkEE 
(EE 
newEE 
{FF 	
levelGG 
=GG 
$numGG 
,GG 
messageHH 
=HH 
$strHH N
,HHN O
	timestampII 
=II 
DateTimeII  
.II  !
UtcNowII! '
,II' (
userJJ 
,JJ 
rolesKK 
,KK 
permissionsLL 
=LL 
BasicPermissionsLL *
,LL* +
}MM 	
)MM	 

;MM
 
}NN 
[SS 
HttpGetSS 
(SS 
$strSS 
)SS 
]SS 
[TT 
	AuthorizeTT 
(TT 
RolesTT 
=TT 
$strTT 
)TT 
]TT 
[UU  
ProducesResponseTypeUU 
(UU 
typeofUU  
(UU  !
objectUU! '
)UU' (
,UU( )
$numUU* -
)UU- .
]UU. /
publicVV 

IActionResultVV 
UserRoleEndpointVV )
(VV) *
)VV* +
{WW 
varXX 
userXX 
=XX 
thisXX 
.XX 
UserXX 
.XX 
IdentityXX %
?XX% &
.XX& '
NameXX' +
??XX, .
UnknownValueXX/ ;
;XX; <
varYY 
rolesYY 
=YY 
thisYY 
.YY 
UserYY 
.YY 
ClaimsYY $
.ZZ 
WhereZZ 
(ZZ 
cZZ 
=>ZZ 
cZZ 
.ZZ 
TypeZZ 
==ZZ !

ClaimTypesZZ" ,
.ZZ, -
RoleZZ- 1
)ZZ1 2
.[[ 
Select[[ 
([[ 
c[[ 
=>[[ 
c[[ 
.[[ 
Value[[  
)[[  !
.\\ 
ToArray\\ 
(\\ 
)\\ 
;\\ 
return^^ 
Ok^^ 
(^^ 
new^^ 
{__ 	
level`` 
=`` 
$num`` 
,`` 
messageaa 
=aa 
$straa ?
,aa? @
	timestampbb 
=bb 
DateTimebb  
.bb  !
UtcNowbb! '
,bb' (
usercc 
,cc 
rolesdd 
,dd 
permissionsee 
=ee 
UserPermissionsee )
,ee) *
}ff 	
)ff	 

;ff
 
}gg 
[ll 
HttpGetll 
(ll 
$strll 
)ll 
]ll 
[mm 
	Authorizemm 
(mm 
Rolesmm 
=mm 
$strmm 
)mm 
]mm  
[nn  
ProducesResponseTypenn 
(nn 
typeofnn  
(nn  !
objectnn! '
)nn' (
,nn( )
$numnn* -
)nn- .
]nn. /
publicoo 

IActionResultoo 
AdminRoleEndpointoo *
(oo* +
)oo+ ,
{pp 
varqq 
userqq 
=qq 
thisqq 
.qq 
Userqq 
.qq 
Identityqq %
?qq% &
.qq& '
Nameqq' +
??qq, .
UnknownValueqq/ ;
;qq; <
varrr 
rolesrr 
=rr 
thisrr 
.rr 
Userrr 
.rr 
Claimsrr $
.ss 
Wheress 
(ss 
css 
=>ss 
css 
.ss 
Typess 
==ss !

ClaimTypesss" ,
.ss, -
Roless- 1
)ss1 2
.tt 
Selecttt 
(tt 
ctt 
=>tt 
ctt 
.tt 
Valuett  
)tt  !
.uu 
ToArrayuu 
(uu 
)uu 
;uu 
returnww 
Okww 
(ww 
newww 
{xx 	
levelyy 
=yy 
$numyy 
,yy 
messagezz 
=zz 
$strzz A
,zzA B
	timestamp{{ 
={{ 
DateTime{{  
.{{  !
UtcNow{{! '
,{{' (
user|| 
,|| 
roles}} 
,}} 
permissions~~ 
=~~ 
AdminPermissions~~ *
,~~* +
} 	
)	 

;
 
}
ÄÄ 
[
ÖÖ 
HttpGet
ÖÖ 
(
ÖÖ 
$str
ÖÖ 
)
ÖÖ 
]
ÖÖ 
[
ÜÜ 
	Authorize
ÜÜ 
(
ÜÜ 
Policy
ÜÜ 
=
ÜÜ 
$str
ÜÜ )
)
ÜÜ) *
]
ÜÜ* +
[
áá "
ProducesResponseType
áá 
(
áá 
typeof
áá  
(
áá  !
object
áá! '
)
áá' (
,
áá( )
$num
áá* -
)
áá- .
]
áá. /
public
àà 

IActionResult
àà 
CacheReadEndpoint
àà *
(
àà* +
)
àà+ ,
{
ââ 
var
ää 
user
ää 
=
ää 
this
ää 
.
ää 
User
ää 
.
ää 
Identity
ää %
?
ää% &
.
ää& '
Name
ää' +
??
ää, .
UnknownValue
ää/ ;
;
ää; <
var
ãã 
roles
ãã 
=
ãã 
this
ãã 
.
ãã 
User
ãã 
.
ãã 
Claims
ãã $
.
åå 
Where
åå 
(
åå 
c
åå 
=>
åå 
c
åå 
.
åå 
Type
åå 
==
åå !

ClaimTypes
åå" ,
.
åå, -
Role
åå- 1
)
åå1 2
.
çç 
Select
çç 
(
çç 
c
çç 
=>
çç 
c
çç 
.
çç 
Value
çç  
)
çç  !
.
éé 
ToArray
éé 
(
éé 
)
éé 
;
éé 
var
èè 
permissions
èè 
=
èè 
this
èè 
.
èè 
User
èè #
.
èè# $
Claims
èè$ *
.
êê 
Where
êê 
(
êê 
c
êê 
=>
êê 
c
êê 
.
êê 
Type
êê 
==
êê !!
PermissionClaimType
êê" 5
)
êê5 6
.
ëë 
Select
ëë 
(
ëë 
c
ëë 
=>
ëë 
c
ëë 
.
ëë 
Value
ëë  
)
ëë  !
.
íí 
ToArray
íí 
(
íí 
)
íí 
;
íí 
return
îî 
Ok
îî 
(
îî 
new
îî 
{
ïï 	
level
ññ 
=
ññ 
$num
ññ 
,
ññ 
message
óó 
=
óó 
$str
óó L
,
óóL M
	timestamp
òò 
=
òò 
DateTime
òò  
.
òò  !
UtcNow
òò! '
,
òò' (
user
ôô 
,
ôô 
roles
öö 
,
öö 
permissions
õõ 
,
õõ 
}
úú 	
)
úú	 

;
úú
 
}
ùù 
[
¢¢ 
HttpGet
¢¢ 
(
¢¢ 
$str
¢¢ 
)
¢¢ 
]
¢¢ 
[
££ 
	Authorize
££ 
(
££ 
Policy
££ 
=
££ 
$str
££ *
)
££* +
]
££+ ,
[
§§ "
ProducesResponseType
§§ 
(
§§ 
typeof
§§  
(
§§  !
object
§§! '
)
§§' (
,
§§( )
$num
§§* -
)
§§- .
]
§§. /
public
•• 

IActionResult
••  
CacheWriteEndpoint
•• +
(
••+ ,
)
••, -
{
¶¶ 
var
ßß 
user
ßß 
=
ßß 
this
ßß 
.
ßß 
User
ßß 
.
ßß 
Identity
ßß %
?
ßß% &
.
ßß& '
Name
ßß' +
??
ßß, .
UnknownValue
ßß/ ;
;
ßß; <
var
®® 
roles
®® 
=
®® 
this
®® 
.
®® 
User
®® 
.
®® 
Claims
®® $
.
©© 
Where
©© 
(
©© 
c
©© 
=>
©© 
c
©© 
.
©© 
Type
©© 
==
©© !

ClaimTypes
©©" ,
.
©©, -
Role
©©- 1
)
©©1 2
.
™™ 
Select
™™ 
(
™™ 
c
™™ 
=>
™™ 
c
™™ 
.
™™ 
Value
™™  
)
™™  !
.
´´ 
ToArray
´´ 
(
´´ 
)
´´ 
;
´´ 
var
¨¨ 
permissions
¨¨ 
=
¨¨ 
this
¨¨ 
.
¨¨ 
User
¨¨ #
.
¨¨# $
Claims
¨¨$ *
.
≠≠ 
Where
≠≠ 
(
≠≠ 
c
≠≠ 
=>
≠≠ 
c
≠≠ 
.
≠≠ 
Type
≠≠ 
==
≠≠ !!
PermissionClaimType
≠≠" 5
)
≠≠5 6
.
ÆÆ 
Select
ÆÆ 
(
ÆÆ 
c
ÆÆ 
=>
ÆÆ 
c
ÆÆ 
.
ÆÆ 
Value
ÆÆ  
)
ÆÆ  !
.
ØØ 
ToArray
ØØ 
(
ØØ 
)
ØØ 
;
ØØ 
return
±± 
Ok
±± 
(
±± 
new
±± 
{
≤≤ 	
level
≥≥ 
=
≥≥ 
$num
≥≥ 
,
≥≥ 
message
¥¥ 
=
¥¥ 
$str
¥¥ N
,
¥¥N O
	timestamp
µµ 
=
µµ 
DateTime
µµ  
.
µµ  !
UtcNow
µµ! '
,
µµ' (
user
∂∂ 
,
∂∂ 
roles
∑∑ 
,
∑∑ 
permissions
∏∏ 
,
∏∏ 
}
ππ 	
)
ππ	 

;
ππ
 
}
∫∫ 
[
øø 
HttpGet
øø 
(
øø 
$str
øø 
)
øø  
]
øø  !
[
¿¿ 
	Authorize
¿¿ 
(
¿¿ 
Roles
¿¿ 
=
¿¿ 
$str
¿¿ &
)
¿¿& '
]
¿¿' (
[
¡¡ "
ProducesResponseType
¡¡ 
(
¡¡ 
typeof
¡¡  
(
¡¡  !
object
¡¡! '
)
¡¡' (
,
¡¡( )
$num
¡¡* -
)
¡¡- .
]
¡¡. /
public
¬¬ 

IActionResult
¬¬ $
AdminOrManagerEndpoint
¬¬ /
(
¬¬/ 0
)
¬¬0 1
{
√√ 
var
ƒƒ 
user
ƒƒ 
=
ƒƒ 
this
ƒƒ 
.
ƒƒ 
User
ƒƒ 
.
ƒƒ 
Identity
ƒƒ %
?
ƒƒ% &
.
ƒƒ& '
Name
ƒƒ' +
??
ƒƒ, .
UnknownValue
ƒƒ/ ;
;
ƒƒ; <
var
≈≈ 
roles
≈≈ 
=
≈≈ 
this
≈≈ 
.
≈≈ 
User
≈≈ 
.
≈≈ 
Claims
≈≈ $
.
∆∆ 
Where
∆∆ 
(
∆∆ 
c
∆∆ 
=>
∆∆ 
c
∆∆ 
.
∆∆ 
Type
∆∆ 
==
∆∆ !

ClaimTypes
∆∆" ,
.
∆∆, -
Role
∆∆- 1
)
∆∆1 2
.
«« 
Select
«« 
(
«« 
c
«« 
=>
«« 
c
«« 
.
«« 
Value
««  
)
««  !
.
»» 
ToArray
»» 
(
»» 
)
»» 
;
»» 
return
   
Ok
   
(
   
new
   
{
ÀÀ 	
level
ÃÃ 
=
ÃÃ 
$num
ÃÃ 
,
ÃÃ 
message
ÕÕ 
=
ÕÕ 
$str
ÕÕ R
,
ÕÕR S
	timestamp
ŒŒ 
=
ŒŒ 
DateTime
ŒŒ  
.
ŒŒ  !
UtcNow
ŒŒ! '
,
ŒŒ' (
user
œœ 
,
œœ 
roles
–– 
,
–– 
permissions
—— 
=
—— #
ManagementPermissions
—— /
,
——/ 0
}
““ 	
)
““	 

;
““
 
}
”” 
[
ÿÿ 
HttpGet
ÿÿ 
(
ÿÿ 
$str
ÿÿ  
)
ÿÿ  !
]
ÿÿ! "
[
ŸŸ 
	Authorize
ŸŸ 
(
ŸŸ 
Roles
ŸŸ 
=
ŸŸ 
$str
ŸŸ 
,
ŸŸ 
Policy
ŸŸ  &
=
ŸŸ' (
$str
ŸŸ) ;
)
ŸŸ; <
]
ŸŸ< =
[
⁄⁄ "
ProducesResponseType
⁄⁄ 
(
⁄⁄ 
typeof
⁄⁄  
(
⁄⁄  !
object
⁄⁄! '
)
⁄⁄' (
,
⁄⁄( )
$num
⁄⁄* -
)
⁄⁄- .
]
⁄⁄. /
public
€€ 

IActionResult
€€ %
AdminCacheWriteEndpoint
€€ 0
(
€€0 1
)
€€1 2
{
‹‹ 
var
›› 
user
›› 
=
›› 
this
›› 
.
›› 
User
›› 
.
›› 
Identity
›› %
?
››% &
.
››& '
Name
››' +
??
››, .
UnknownValue
››/ ;
;
››; <
var
ﬁﬁ 
roles
ﬁﬁ 
=
ﬁﬁ 
this
ﬁﬁ 
.
ﬁﬁ 
User
ﬁﬁ 
.
ﬁﬁ 
Claims
ﬁﬁ $
.
ﬂﬂ 
Where
ﬂﬂ 
(
ﬂﬂ 
c
ﬂﬂ 
=>
ﬂﬂ 
c
ﬂﬂ 
.
ﬂﬂ 
Type
ﬂﬂ 
==
ﬂﬂ !

ClaimTypes
ﬂﬂ" ,
.
ﬂﬂ, -
Role
ﬂﬂ- 1
)
ﬂﬂ1 2
.
‡‡ 
Select
‡‡ 
(
‡‡ 
c
‡‡ 
=>
‡‡ 
c
‡‡ 
.
‡‡ 
Value
‡‡  
)
‡‡  !
.
·· 
ToArray
·· 
(
·· 
)
·· 
;
·· 
var
‚‚ 
permissions
‚‚ 
=
‚‚ 
this
‚‚ 
.
‚‚ 
User
‚‚ #
.
‚‚# $
Claims
‚‚$ *
.
„„ 
Where
„„ 
(
„„ 
c
„„ 
=>
„„ 
c
„„ 
.
„„ 
Type
„„ 
==
„„ !!
PermissionClaimType
„„" 5
)
„„5 6
.
‰‰ 
Select
‰‰ 
(
‰‰ 
c
‰‰ 
=>
‰‰ 
c
‰‰ 
.
‰‰ 
Value
‰‰  
)
‰‰  !
.
ÂÂ 
ToArray
ÂÂ 
(
ÂÂ 
)
ÂÂ 
;
ÂÂ 
return
ÁÁ 
Ok
ÁÁ 
(
ÁÁ 
new
ÁÁ 
{
ËË 	
level
ÈÈ 
=
ÈÈ 
$num
ÈÈ 
,
ÈÈ 
message
ÍÍ 
=
ÍÍ 
$str
ÍÍ c
,
ÍÍc d
	timestamp
ÎÎ 
=
ÎÎ 
DateTime
ÎÎ  
.
ÎÎ  !
UtcNow
ÎÎ! '
,
ÎÎ' (
user
ÏÏ 
,
ÏÏ 
roles
ÌÌ 
,
ÌÌ 
permissions
ÓÓ 
,
ÓÓ 
}
ÔÔ 	
)
ÔÔ	 

;
ÔÔ
 
}
 
[
ıı 
HttpGet
ıı 
(
ıı 
$str
ıı  
)
ıı  !
]
ıı! "
[
ˆˆ 
	Authorize
ˆˆ 
(
ˆˆ 
Policy
ˆˆ 
=
ˆˆ 
$str
ˆˆ 0
)
ˆˆ0 1
]
ˆˆ1 2
[
˜˜ "
ProducesResponseType
˜˜ 
(
˜˜ 
typeof
˜˜  
(
˜˜  !
object
˜˜! '
)
˜˜' (
,
˜˜( )
$num
˜˜* -
)
˜˜- .
]
˜˜. /
public
¯¯ 

IActionResult
¯¯ &
IdentityProviderEndpoint
¯¯ 1
(
¯¯1 2
)
¯¯2 3
{
˘˘ 
var
˙˙ 
user
˙˙ 
=
˙˙ 
this
˙˙ 
.
˙˙ 
User
˙˙ 
.
˙˙ 
Identity
˙˙ %
?
˙˙% &
.
˙˙& '
Name
˙˙' +
??
˙˙, .
UnknownValue
˙˙/ ;
;
˙˙; <
var
˚˚ 
roles
˚˚ 
=
˚˚ 
this
˚˚ 
.
˚˚ 
User
˚˚ 
.
˚˚ 
Claims
˚˚ $
.
¸¸ 
Where
¸¸ 
(
¸¸ 
c
¸¸ 
=>
¸¸ 
c
¸¸ 
.
¸¸ 
Type
¸¸ 
==
¸¸ !

ClaimTypes
¸¸" ,
.
¸¸, -
Role
¸¸- 1
)
¸¸1 2
.
˝˝ 
Select
˝˝ 
(
˝˝ 
c
˝˝ 
=>
˝˝ 
c
˝˝ 
.
˝˝ 
Value
˝˝  
)
˝˝  !
.
˛˛ 
ToArray
˛˛ 
(
˛˛ 
)
˛˛ 
;
˛˛ 
var
ˇˇ 
identityProvider
ˇˇ 
=
ˇˇ 
this
ˇˇ #
.
ˇˇ# $
User
ˇˇ$ (
.
ˇˇ( )
Claims
ˇˇ) /
.
ÄÄ 
FirstOrDefault
ÄÄ 
(
ÄÄ 
c
ÄÄ 
=>
ÄÄ  
c
ÄÄ! "
.
ÄÄ" #
Type
ÄÄ# '
==
ÄÄ( *
$str
ÄÄ+ >
)
ÄÄ> ?
?
ÄÄ? @
.
ÄÄ@ A
Value
ÄÄA F
??
ÄÄG I
UnknownValue
ÄÄJ V
;
ÄÄV W
return
ÇÇ 
Ok
ÇÇ 
(
ÇÇ 
new
ÇÇ 
{
ÉÉ 	
level
ÑÑ 
=
ÑÑ 
$num
ÑÑ 
,
ÑÑ 
message
ÖÖ 
=
ÖÖ 
$str
ÖÖ X
,
ÖÖX Y
	timestamp
ÜÜ 
=
ÜÜ 
DateTime
ÜÜ  
.
ÜÜ  !
UtcNow
ÜÜ! '
,
ÜÜ' (
user
áá 
,
áá 
roles
àà 
,
àà 
identityProvider
ââ 
,
ââ 
permissions
ää 
=
ää )
IdentityProviderPermissions
ää 5
,
ää5 6
}
ãã 	
)
ãã	 

;
ãã
 
}
åå 
[
ëë 
HttpGet
ëë 
(
ëë 
$str
ëë 
)
ëë 
]
ëë 
[
íí 
	Authorize
íí 
(
íí 
Policy
íí 
=
íí 
$str
íí )
)
íí) *
]
íí* +
[
ìì "
ProducesResponseType
ìì 
(
ìì 
typeof
ìì  
(
ìì  !
object
ìì! '
)
ìì' (
,
ìì( )
$num
ìì* -
)
ìì- .
]
ìì. /
public
îî 

IActionResult
îî 
AuthLevelEndpoint
îî *
(
îî* +
)
îî+ ,
{
ïï 
var
ññ 
user
ññ 
=
ññ 
this
ññ 
.
ññ 
User
ññ 
.
ññ 
Identity
ññ %
?
ññ% &
.
ññ& '
Name
ññ' +
??
ññ, .
UnknownValue
ññ/ ;
;
ññ; <
var
óó 
roles
óó 
=
óó 
this
óó 
.
óó 
User
óó 
.
óó 
Claims
óó $
.
òò 
Where
òò 
(
òò 
c
òò 
=>
òò 
c
òò 
.
òò 
Type
òò 
==
òò !

ClaimTypes
òò" ,
.
òò, -
Role
òò- 1
)
òò1 2
.
ôô 
Select
ôô 
(
ôô 
c
ôô 
=>
ôô 
c
ôô 
.
ôô 
Value
ôô  
)
ôô  !
.
öö 
ToArray
öö 
(
öö 
)
öö 
;
öö 
var
õõ 
	authLevel
õõ 
=
õõ 
this
õõ 
.
õõ 
User
õõ !
.
õõ! "
Claims
õõ" (
.
úú 
FirstOrDefault
úú 
(
úú 
c
úú 
=>
úú  
c
úú! "
.
úú" #
Type
úú# '
==
úú( *
$str
úú+ 7
)
úú7 8
?
úú8 9
.
úú9 :
Value
úú: ?
??
úú@ B
UnknownValue
úúC O
;
úúO P
return
ûû 
Ok
ûû 
(
ûû 
new
ûû 
{
üü 	
level
†† 
=
†† 
$num
†† 
,
†† 
message
°° 
=
°° 
$str
°° T
,
°°T U
	timestamp
¢¢ 
=
¢¢ 
DateTime
¢¢  
.
¢¢  !
UtcNow
¢¢! '
,
¢¢' (
user
££ 
,
££ 
roles
§§ 
,
§§ 
	authLevel
•• 
,
•• 
permissions
¶¶ 
=
¶¶ !
HighAuthPermissions
¶¶ -
,
¶¶- .
}
ßß 	
)
ßß	 

;
ßß
 
}
®® 
[
≠≠ 
HttpGet
≠≠ 
(
≠≠ 
$str
≠≠ 
)
≠≠  
]
≠≠  !
[
ÆÆ 
	Authorize
ÆÆ 
(
ÆÆ 
Roles
ÆÆ 
=
ÆÆ 
$str
ÆÆ 
)
ÆÆ 
]
ÆÆ  
[
ØØ 
	Authorize
ØØ 
(
ØØ 
Policy
ØØ 
=
ØØ 
$str
ØØ *
)
ØØ* +
]
ØØ+ ,
[
∞∞ 
	Authorize
∞∞ 
(
∞∞ 
Policy
∞∞ 
=
∞∞ 
$str
∞∞ 0
)
∞∞0 1
]
∞∞1 2
[
±± 
	Authorize
±± 
(
±± 
Policy
±± 
=
±± 
$str
±± )
)
±±) *
]
±±* +
[
≤≤ "
ProducesResponseType
≤≤ 
(
≤≤ 
typeof
≤≤  
(
≤≤  !
object
≤≤! '
)
≤≤' (
,
≤≤( )
$num
≤≤* -
)
≤≤- .
]
≤≤. /
public
≥≥ 

IActionResult
≥≥ %
MaximumSecurityEndpoint
≥≥ 0
(
≥≥0 1
)
≥≥1 2
{
¥¥ 
var
µµ 
user
µµ 
=
µµ 
this
µµ 
.
µµ 
User
µµ 
.
µµ 
Identity
µµ %
?
µµ% &
.
µµ& '
Name
µµ' +
??
µµ, .
UnknownValue
µµ/ ;
;
µµ; <
var
∂∂ 
roles
∂∂ 
=
∂∂ 
this
∂∂ 
.
∂∂ 
User
∂∂ 
.
∂∂ 
Claims
∂∂ $
.
∑∑ 
Where
∑∑ 
(
∑∑ 
c
∑∑ 
=>
∑∑ 
c
∑∑ 
.
∑∑ 
Type
∑∑ 
==
∑∑ !

ClaimTypes
∑∑" ,
.
∑∑, -
Role
∑∑- 1
)
∑∑1 2
.
∏∏ 
Select
∏∏ 
(
∏∏ 
c
∏∏ 
=>
∏∏ 
c
∏∏ 
.
∏∏ 
Value
∏∏  
)
∏∏  !
.
ππ 
ToArray
ππ 
(
ππ 
)
ππ 
;
ππ 
var
∫∫ 
permissions
∫∫ 
=
∫∫ 
this
∫∫ 
.
∫∫ 
User
∫∫ #
.
∫∫# $
Claims
∫∫$ *
.
ªª 
Where
ªª 
(
ªª 
c
ªª 
=>
ªª 
c
ªª 
.
ªª 
Type
ªª 
==
ªª !!
PermissionClaimType
ªª" 5
)
ªª5 6
.
ºº 
Select
ºº 
(
ºº 
c
ºº 
=>
ºº 
c
ºº 
.
ºº 
Value
ºº  
)
ºº  !
.
ΩΩ 
ToArray
ΩΩ 
(
ΩΩ 
)
ΩΩ 
;
ΩΩ 
var
ææ 
identityProvider
ææ 
=
ææ 
this
ææ #
.
ææ# $
User
ææ$ (
.
ææ( )
Claims
ææ) /
.
øø 
FirstOrDefault
øø 
(
øø 
c
øø 
=>
øø  
c
øø! "
.
øø" #
Type
øø# '
==
øø( *
$str
øø+ >
)
øø> ?
?
øø? @
.
øø@ A
Value
øøA F
??
øøG I
UnknownValue
øøJ V
;
øøV W
var
¿¿ 
	authLevel
¿¿ 
=
¿¿ 
this
¿¿ 
.
¿¿ 
User
¿¿ !
.
¿¿! "
Claims
¿¿" (
.
¡¡ 
FirstOrDefault
¡¡ 
(
¡¡ 
c
¡¡ 
=>
¡¡  
c
¡¡! "
.
¡¡" #
Type
¡¡# '
==
¡¡( *
$str
¡¡+ 7
)
¡¡7 8
?
¡¡8 9
.
¡¡9 :
Value
¡¡: ?
??
¡¡@ B
UnknownValue
¡¡C O
;
¡¡O P
return
√√ 
Ok
√√ 
(
√√ 
new
√√ 
{
ƒƒ 	
level
≈≈ 
=
≈≈ 
$num
≈≈ 
,
≈≈ 
message
∆∆ 
=
∆∆ 
$str
∆∆ R
,
∆∆R S
	timestamp
«« 
=
«« 
DateTime
««  
.
««  !
UtcNow
««! '
,
««' (
user
»» 
,
»» 
roles
…… 
,
…… 
permissions
   
,
   
identityProvider
ÀÀ 
,
ÀÀ 
	authLevel
ÃÃ 
,
ÃÃ 
}
ÕÕ 	
)
ÕÕ	 

;
ÕÕ
 
}
ŒŒ 
}œœ Ê/
_/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Controllers/ApplicationController.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Controllers *
;* +
[ 
ApiController 
] 
[ 
Route 
( 
$str 	
)	 

]
 
[ 
Tags 
( 
$str 
) 
] 
public 
class !
ApplicationController "
:# $
ControllerBase% 3
{ 
private 
readonly 
ILogger 
< !
ApplicationController 2
>2 3
logger4 :
;: ;
public 
!
ApplicationController  
(  !
ILogger! (
<( )!
ApplicationController) >
>> ?
logger@ F
)F G
{ 
this 
. 
logger 
= 
logger 
; 
} 
[ 
HttpGet 
] 
public 

IActionResult 
Home 
( 
) 
{ 
var 
	jwsHeader 
= 
Convert 
.  
ToBase64String  .
(. /
Encoding/ 7
.7 8
UTF88 <
.< =
GetBytes= E
(E F
$strF ]
)] ^
)^ _
;_ `
this 
. 
logger 
? 
. 
LogInformation #
(# $
$str$ G
,G H
	jwsHeaderI R
)R S
;S T
if"" 

("" 
this"" 
."" 
Request"" 
?"" 
."" 
Headers"" !
!=""" $
null""% )
)"") *
{## 	
foreach$$ 
($$ 
var$$ 
header$$ 
in$$  "
this$$# '
.$$' (
Request$$( /
.$$/ 0
Headers$$0 7
)$$7 8
{%% 
this&& 
.&& 
logger&& 
?&& 
.&& 
LogInformation&& +
(&&+ ,
$str&&, F
,&&F G
header&&H N
.&&N O
Key&&O R
,&&R S
header&&T Z
.&&Z [
Value&&[ `
)&&` a
;&&a b
}'' 
}(( 	
return** 
Ok** 
(** 
$str** ,
)**, -
;**- .
}++ 
[00 
HttpGet00 
(00 
$str00 -
)00- .
]00. /
[11 
	Authorize11 
(11 
Policy11 
=11 
$str11 ;
)11; <
]11< =
[22  
ProducesResponseType22 
(22 
typeof22  
(22  !
string22! '
)22' (
,22( )
$num22* -
)22- .
]22. /
[33  
ProducesResponseType33 
(33 
$num33 
)33 
]33 
[44  
ProducesResponseType44 
(44 
$num44 
)44 
]44 
public55 

IActionResult55 
	GetObject55 "
(55" #
[55# $
	FromQuery55$ -
]55- .
string55/ 5
id556 8
)558 9
{66 
this77 
.77 
logger77 
.77 
LogInformation77 "
(77" #
$str77# 5
,775 6
id777 9
)779 :
;77: ;
return88 
Ok88 
(88 
$str88 
)88 
;88 
}99 
[>> 
HttpPut>> 
(>> 
$str>> -
)>>- .
]>>. /
[?? 
	Authorize?? 
(?? 
Policy?? 
=?? 
$str?? <
)??< =
]??= >
[@@  
ProducesResponseType@@ 
(@@ 
typeof@@  
(@@  !
string@@! '
)@@' (
,@@( )
$num@@* -
)@@- .
]@@. /
[AA  
ProducesResponseTypeAA 
(AA 
$numAA 
)AA 
]AA 
[BB  
ProducesResponseTypeBB 
(BB 
$numBB 
)BB 
]BB 
publicCC 

IActionResultCC 
	PutObjectCC "
(CC" #
[CC# $
	FromQueryCC$ -
]CC- .
stringCC/ 5
idCC6 8
)CC8 9
{DD 
thisEE 
.EE 
loggerEE 
.EE 
LogInformationEE "
(EE" #
$strEE# 5
,EE5 6
idEE7 9
)EE9 :
;EE: ;
returnFF 
OkFF 
(FF 
$strFF 
)FF 
;FF 
}GG 
[LL 

HttpDeleteLL 
(LL 
$strLL 3
)LL3 4
]LL4 5
[MM 
	AuthorizeMM 
(MM 
PolicyMM 
=MM 
$strMM =
)MM= >
]MM> ?
[NN  
ProducesResponseTypeNN 
(NN 
typeofNN  
(NN  !
stringNN! '
)NN' (
,NN( )
$numNN* -
)NN- .
]NN. /
[OO  
ProducesResponseTypeOO 
(OO 
$numOO 
)OO 
]OO 
[PP  
ProducesResponseTypePP 
(PP 
$numPP 
)PP 
]PP 
publicQQ 

IActionResultQQ 
DeleteObjectQQ %
(QQ% &
[QQ& '
	FromQueryQQ' 0
]QQ0 1
stringQQ2 8
idQQ9 ;
)QQ; <
{RR 
thisSS 
.SS 
loggerSS 
.SS 
LogInformationSS "
(SS" #
$strSS# 8
,SS8 9
idSS: <
)SS< =
;SS= >
returnTT 
OkTT 
(TT 
$strTT 
)TT 
;TT 
}UU 
}VV Õ)
a/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Authorization/PermissionRequirement.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Authorization ,
;, -
public 
class !
PermissionRequirement "
:# $%
IAuthorizationRequirement% >
{ 
public 

string 

Permission 
{ 
get "
;" #
}$ %
public 
!
PermissionRequirement  
(  !
string! '

permission( 2
)2 3
{ 
this 
. 

Permission 
= 

permission $
??% '
throw( -
new. 1!
ArgumentNullException2 G
(G H
nameofH N
(N O

permissionO Y
)Y Z
)Z [
;[ \
if 

( 
string 
. 
IsNullOrWhiteSpace %
(% &

permission& 0
)0 1
)1 2
{ 	
throw 
new 
ArgumentException '
(' (
$str( R
,R S
nameofT Z
(Z [

permission[ e
)e f
)f g
;g h
} 	
} 
} 
public 
class $
AnyPermissionRequirement %
:& '%
IAuthorizationRequirement( A
{ 
public 

string 
[ 
] 
Permissions 
{  !
get" %
;% &
}' (
public!! 
$
AnyPermissionRequirement!! #
(!!# $
params!!$ *
string!!+ 1
[!!1 2
]!!2 3
permissions!!4 ?
)!!? @
{"" 
this## 
.## 
Permissions## 
=## 
permissions## &
??##' )
throw##* /
new##0 3!
ArgumentNullException##4 I
(##I J
nameof##J P
(##P Q
permissions##Q \
)##\ ]
)##] ^
;##^ _
}$$ 
}%% 
public** 
class** %
AllPermissionsRequirement** &
:**' (%
IAuthorizationRequirement**) B
{++ 
public,, 

string,, 
[,, 
],, 
Permissions,, 
{,,  !
get,," %
;,,% &
},,' (
public.. 
%
AllPermissionsRequirement.. $
(..$ %
params..% +
string.., 2
[..2 3
]..3 4
permissions..5 @
)..@ A
{// 
this00 
.00 
Permissions00 
=00 
permissions00 &
??00' )
throw00* /
new000 3!
ArgumentNullException004 I
(00I J
nameof00J P
(00P Q
permissions00Q \
)00\ ]
)00] ^
;00^ _
}11 
}22 
public77 
class77  
AuthLevelRequirement77 !
:77" #%
IAuthorizationRequirement77$ =
{88 
public99 

string99 
RequiredAuthLevel99 #
{99$ %
get99& )
;99) *
}99+ ,
public;; 
 
AuthLevelRequirement;; 
(;;  
string;;  &
requiredAuthLevel;;' 8
);;8 9
{<< 
this== 
.== 
RequiredAuthLevel== 
===  
requiredAuthLevel==! 2
??==3 5
throw==6 ;
new==< ?!
ArgumentNullException==@ U
(==U V
nameof==V \
(==\ ]
requiredAuthLevel==] n
)==n o
)==o p
;==p q
}>> 
}?? 
publicDD 
classDD '
IdentityProviderRequirementDD (
:DD) *%
IAuthorizationRequirementDD+ D
{EE 
publicFF 

stringFF $
RequiredIdentityProviderFF *
{FF+ ,
getFF- 0
;FF0 1
}FF2 3
publicHH 
'
IdentityProviderRequirementHH &
(HH& '
stringHH' -$
requiredIdentityProviderHH. F
)HHF G
{II 
thisJJ 
.JJ $
RequiredIdentityProviderJJ %
=JJ& '$
requiredIdentityProviderJJ( @
??JJA C
throwJJD I
newJJJ M!
ArgumentNullExceptionJJN c
(JJc d
nameofJJd j
(JJj k%
requiredIdentityProvider	JJk É
)
JJÉ Ñ
)
JJÑ Ö
;
JJÖ Ü
}KK 
}LL 
publicQQ 
classQQ 
RoleRequirementQQ 
:QQ %
IAuthorizationRequirementQQ 8
{RR 
publicSS 

stringSS 
RoleSS 
{SS 
getSS 
;SS 
}SS 
publicUU 

RoleRequirementUU 
(UU 
stringUU !
roleUU" &
)UU& '
{VV 
thisWW 
.WW 
RoleWW 
=WW 
roleWW 
??WW 
throwWW !
newWW" %!
ArgumentNullExceptionWW& ;
(WW; <
nameofWW< B
(WWB C
roleWWC G
)WWG H
)WWH I
;WWI J
}XX 
}YY ÚY
]/Users/yshmulev/dev/spring-java-2/dotnet-spring-equivalent/Authorization/PermissionHandler.cs
	namespace 	 
SpringJavaEquivalent
 
. 
Authorization ,
;, -
public 
class 
PermissionHandler 
:   
AuthorizationHandler! 5
<5 6!
PermissionRequirement6 K
>K L
{ 
	protected 
override 
Task "
HandleRequirementAsync 2
(2 3'
AuthorizationHandlerContext3 N
contextO V
,V W!
PermissionRequirementX m
requirementn y
)y z
{ !
ArgumentNullException 
. 
ThrowIfNull )
() *
context* 1
)1 2
;2 3!
ArgumentNullException 
. 
ThrowIfNull )
() *
requirement* 5
)5 6
;6 7
if 

( 
context 
. 
User 
? 
. 
Identity "
?" #
.# $
IsAuthenticated$ 3
!=4 6
true7 ;
); <
{ 	
return 
Task 
. 
CompletedTask %
;% &
} 	
var 
hasPermission 
= 
context #
.# $
User$ (
.( )
HasClaim) 1
(1 2
$str2 >
,> ?
requirement@ K
.K L

PermissionL V
)V W
;W X
if 

( 
hasPermission 
) 
{ 	
context 
. 
Succeed 
( 
requirement '
)' (
;( )
} 	
return   
Task   
.   
CompletedTask   !
;  ! "
}!! 
}"" 
public'' 
class''  
AnyPermissionHandler'' !
:''" # 
AuthorizationHandler''$ 8
<''8 9$
AnyPermissionRequirement''9 Q
>''Q R
{(( 
	protected)) 
override)) 
Task)) "
HandleRequirementAsync)) 2
())2 3'
AuthorizationHandlerContext))3 N
context))O V
,))V W$
AnyPermissionRequirement))X p
requirement))q |
)))| }
{** !
ArgumentNullException++ 
.++ 
ThrowIfNull++ )
(++) *
context++* 1
)++1 2
;++2 3!
ArgumentNullException,, 
.,, 
ThrowIfNull,, )
(,,) *
requirement,,* 5
),,5 6
;,,6 7
if.. 

(.. 
context.. 
... 
User.. 
?.. 
... 
Identity.. "
?.." #
...# $
IsAuthenticated..$ 3
!=..4 6
true..7 ;
)..; <
{// 	
return00 
Task00 
.00 
CompletedTask00 %
;00% &
}11 	
var33 
hasAnyPermission33 
=33 
requirement33 *
.33* +
Permissions33+ 6
.336 7
Any337 :
(33: ;

permission33; E
=>33F H
context44 
.44 
User44 
.44 
HasClaim44 !
(44! "
$str44" .
,44. /

permission440 :
)44: ;
)44; <
;44< =
if66 

(66 
hasAnyPermission66 
)66 
{77 	
context88 
.88 
Succeed88 
(88 
requirement88 '
)88' (
;88( )
}99 	
return;; 
Task;; 
.;; 
CompletedTask;; !
;;;! "
}<< 
}== 
publicBB 
classBB !
AllPermissionsHandlerBB "
:BB# $ 
AuthorizationHandlerBB% 9
<BB9 :%
AllPermissionsRequirementBB: S
>BBS T
{CC 
	protectedDD 
overrideDD 
TaskDD "
HandleRequirementAsyncDD 2
(DD2 3'
AuthorizationHandlerContextDD3 N
contextDDO V
,DDV W%
AllPermissionsRequirementDDX q
requirementDDr }
)DD} ~
{EE !
ArgumentNullExceptionFF 
.FF 
ThrowIfNullFF )
(FF) *
contextFF* 1
)FF1 2
;FF2 3!
ArgumentNullExceptionGG 
.GG 
ThrowIfNullGG )
(GG) *
requirementGG* 5
)GG5 6
;GG6 7
ifII 

(II 
contextII 
.II 
UserII 
?II 
.II 
IdentityII "
?II" #
.II# $
IsAuthenticatedII$ 3
!=II4 6
trueII7 ;
)II; <
{JJ 	
returnKK 
TaskKK 
.KK 
CompletedTaskKK %
;KK% &
}LL 	
varNN 
hasAllPermissionsNN 
=NN 
requirementNN  +
.NN+ ,
PermissionsNN, 7
.NN7 8
AllNN8 ;
(NN; <

permissionNN< F
=>NNG I
contextOO 
.OO 
UserOO 
.OO 
HasClaimOO !
(OO! "
$strOO" .
,OO. /

permissionOO0 :
)OO: ;
)OO; <
;OO< =
ifQQ 

(QQ 
hasAllPermissionsQQ 
)QQ 
{RR 	
contextSS 
.SS 
SucceedSS 
(SS 
requirementSS '
)SS' (
;SS( )
}TT 	
returnVV 
TaskVV 
.VV 
CompletedTaskVV !
;VV! "
}WW 
}XX 
public]] 
class]] 
RoleHandler]] 
:]]  
AuthorizationHandler]] /
<]]/ 0
RoleRequirement]]0 ?
>]]? @
{^^ 
	protected__ 
override__ 
Task__ "
HandleRequirementAsync__ 2
(__2 3'
AuthorizationHandlerContext__3 N
context__O V
,__V W
RoleRequirement__X g
requirement__h s
)__s t
{`` !
ArgumentNullExceptionaa 
.aa 
ThrowIfNullaa )
(aa) *
contextaa* 1
)aa1 2
;aa2 3!
ArgumentNullExceptionbb 
.bb 
ThrowIfNullbb )
(bb) *
requirementbb* 5
)bb5 6
;bb6 7
ifdd 

(dd 
contextdd 
.dd 
Userdd 
?dd 
.dd 
Identitydd "
?dd" #
.dd# $
IsAuthenticateddd$ 3
!=dd4 6
truedd7 ;
)dd; <
{ee 	
returnff 
Taskff 
.ff 
CompletedTaskff %
;ff% &
}gg 	
varii 
hasRoleii 
=ii 
contextii 
.ii 
Userii "
.ii" #
IsInRoleii# +
(ii+ ,
requirementii, 7
.ii7 8
Roleii8 <
)ii< =
;ii= >
ifkk 

(kk 
hasRolekk 
)kk 
{ll 	
contextmm 
.mm 
Succeedmm 
(mm 
requirementmm '
)mm' (
;mm( )
}nn 	
returnpp 
Taskpp 
.pp 
CompletedTaskpp !
;pp! "
}qq 
}rr 
publicww 
classww #
IdentityProviderHandlerww $
:ww% & 
AuthorizationHandlerww' ;
<ww; <'
IdentityProviderRequirementww< W
>wwW X
{xx 
	protectedyy 
overrideyy 
Taskyy "
HandleRequirementAsyncyy 2
(yy2 3'
AuthorizationHandlerContextyy3 N
contextyyO V
,yyV W'
IdentityProviderRequirementyyX s
requirementyyt 
)	yy Ä
{zz !
ArgumentNullException{{ 
.{{ 
ThrowIfNull{{ )
({{) *
context{{* 1
){{1 2
;{{2 3!
ArgumentNullException|| 
.|| 
ThrowIfNull|| )
(||) *
requirement||* 5
)||5 6
;||6 7
if~~ 

(~~ 
context~~ 
.~~ 
User~~ 
?~~ 
.~~ 
Identity~~ "
?~~" #
.~~# $
IsAuthenticated~~$ 3
!=~~4 6
true~~7 ;
)~~; <
{ 	
return
ÄÄ 
Task
ÄÄ 
.
ÄÄ 
CompletedTask
ÄÄ %
;
ÄÄ% &
}
ÅÅ 	
var
ÉÉ 
identityProvider
ÉÉ 
=
ÉÉ 
context
ÉÉ &
.
ÉÉ& '
User
ÉÉ' +
.
ÉÉ+ ,
	FindFirst
ÉÉ, 5
(
ÉÉ5 6
$str
ÉÉ6 I
)
ÉÉI J
?
ÉÉJ K
.
ÉÉK L
Value
ÉÉL Q
;
ÉÉQ R
if
ÖÖ 

(
ÖÖ 
identityProvider
ÖÖ 
==
ÖÖ 
requirement
ÖÖ  +
.
ÖÖ+ ,&
RequiredIdentityProvider
ÖÖ, D
)
ÖÖD E
{
ÜÜ 	
context
áá 
.
áá 
Succeed
áá 
(
áá 
requirement
áá '
)
áá' (
;
áá( )
}
àà 	
return
ää 
Task
ää 
.
ää 
CompletedTask
ää !
;
ää! "
}
ãã 
}åå 
publicëë 
class
ëë 
AuthLevelHandler
ëë 
:
ëë "
AuthorizationHandler
ëë  4
<
ëë4 5"
AuthLevelRequirement
ëë5 I
>
ëëI J
{íí 
	protected
ìì 
override
ìì 
Task
ìì $
HandleRequirementAsync
ìì 2
(
ìì2 3)
AuthorizationHandlerContext
ìì3 N
context
ììO V
,
ììV W"
AuthLevelRequirement
ììX l
requirement
ììm x
)
ììx y
{
îî #
ArgumentNullException
ïï 
.
ïï 
ThrowIfNull
ïï )
(
ïï) *
context
ïï* 1
)
ïï1 2
;
ïï2 3#
ArgumentNullException
ññ 
.
ññ 
ThrowIfNull
ññ )
(
ññ) *
requirement
ññ* 5
)
ññ5 6
;
ññ6 7
if
òò 

(
òò 
context
òò 
.
òò 
User
òò 
?
òò 
.
òò 
Identity
òò "
?
òò" #
.
òò# $
IsAuthenticated
òò$ 3
!=
òò4 6
true
òò7 ;
)
òò; <
{
ôô 	
return
öö 
Task
öö 
.
öö 
CompletedTask
öö %
;
öö% &
}
õõ 	
var
ùù 
	authLevel
ùù 
=
ùù 
context
ùù 
.
ùù  
User
ùù  $
.
ùù$ %
	FindFirst
ùù% .
(
ùù. /
$str
ùù/ ;
)
ùù; <
?
ùù< =
.
ùù= >
Value
ùù> C
;
ùùC D
if
üü 

(
üü 
	authLevel
üü 
==
üü 
requirement
üü $
.
üü$ %
RequiredAuthLevel
üü% 6
)
üü6 7
{
†† 	
context
°° 
.
°° 
Succeed
°° 
(
°° 
requirement
°° '
)
°°' (
;
°°( )
}
¢¢ 	
return
§§ 
Task
§§ 
.
§§ 
CompletedTask
§§ !
;
§§! "
}
•• 
}¶¶ 