# Multi-stage build for .NET distroless image
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Copy project file and restore dependencies
COPY ["SpringJavaEquivalent.csproj", "."]
RUN dotnet restore "SpringJavaEquivalent.csproj"

# Copy source code
COPY ["Controllers/", "Controllers/"]
COPY ["Services/", "Services/"]
COPY ["Authorization/", "Authorization/"]
COPY ["Program.cs", "."]
COPY ["appsettings.json", "."]
COPY ["appsettings.Development.json", "."]

# Build the application
WORKDIR "/src"
RUN dotnet build "SpringJavaEquivalent.csproj" -c Release -o /app/build

# Publish the application
FROM build AS publish
RUN dotnet publish "SpringJavaEquivalent.csproj" -c Release -o /app/publish \
    --self-contained false \
    --no-restore

# Use Microsoft's standard ASP.NET Core runtime image (distroless not available for .NET 9)
FROM mcr.microsoft.com/dotnet/aspnet:9.0 AS final
WORKDIR /app

# Create non-root user for security
RUN groupadd -g 1001 appgroup && \
    useradd -r -u 1001 -g appgroup appuser

# Copy the published application
COPY --from=publish /app/publish .

# Change ownership to non-root user
RUN chown -R appuser:appgroup /app

# Switch to non-root user
USER appuser

# Expose port
EXPOSE 5000

# Configure the entry point
ENTRYPOINT ["dotnet", "SpringJavaEquivalent.dll"]