# Secure Dockerfile with security best practices
FROM mcr.microsoft.com/dotnet/sdk:9.0 AS build
WORKDIR /src

# Create non-root user for build
RUN groupadd -r appuser && useradd -r -g appuser appuser

# Copy project file and restore dependencies
COPY ["SpringJavaEquivalent.csproj", "."]
RUN dotnet restore "SpringJavaEquivalent.csproj"

# Copy source code
COPY . .

# Build and publish
RUN dotnet publish "SpringJavaEquivalent.csproj" -c Release -o /app/publish

# Use distroless runtime with security features
FROM gcr.io/distroless/cc-debian12:nonroot
WORKDIR /app

# Copy the published application
COPY --from=build /app/publish .

# Set security context
USER nonroot:nonroot

# Expose port
EXPOSE 8080

# Add health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD ["/app/SpringJavaEquivalent", "--health-check"]

# Use read-only root filesystem for security
# Note: This requires the app to be configured for read-only filesystem
# ENV DOTNET_SYSTEM_GLOBALIZATION_INVARIANT=1

ENTRYPOINT ["dotnet", "SpringJavaEquivalent.dll"]
